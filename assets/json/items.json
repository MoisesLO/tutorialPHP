[
    {
        "title": "1 - ¿Qué es PHP?",
        "subtitle": "PHP (acrónimo de \"PHP: Hypertext Preprocessor\") es ...",
        "content": "<div>\n\n<p>PHP (acrónimo de \"PHP: Hypertext Preprocessor\") es un lenguaje interpretado de alto nivel embebido en páginas HTML y ejecutado en el servidor.</p>\n\n<p>Hay que entender primero como funciona la solicitud de páginas en un navegador para comenzar a programar en PHP.</p>\n\n<h3>Comunicación entre el cliente y el servidor sin PHP:</h3>\n<p>1 - Tipeamos en la barra del navegador la dirección y el archivo a solicitar.</p>\n\n<p>2 - El web browser (navegador) envía el mensaje a través de Internet a la computadora, por ejemplo  www.lanacion.com/pagina1.htm solicitando la página (archivo) pagina1.htm</p>\n\n<p>3 - El web server (servidor web, que puede ser el Apache, IIS, etc.) que es un programa que se ejecuta en la máquina www.lanacion.com, recibe el mensaje y lee el archivo solicitado desde el disco duro.</p>\n\n<p>4 - El servidor web envía el archivo solicitado por el navegador tal cual está en el disco duro.</p>\n\n<p>5 - El navegador muestra en pantalla el archivo que envió el servidor web. </p>\n\n<p>Este proceso siempre es el mismo cuando hablamos de páginas estáticas (páginas que no cambian), cualquiera sea el cliente que solicita la página el contenido siempre será el mismo.<br>\n</p><p>La única forma que el contenido del archivo cambie es que el administrador de ese sitio web edite el contenido del archivo pagina1.htm y haga modificaciones.</p>\n\n\n\n<h3>Comunicación entre el cliente y el servidor con PHP:</h3>\n<p>1 - Tipeamos en la barra del navegador la dirección y el archivo a solicitar.</p>\n\n<p>2 - El web browser (navegador) envía el mensaje a través de Internet a la computadora llamada www.lanacion.com solicitando la página (archivo) pagina1.php</p>\n\n<p>3 - El web server (servidor web, que puede ser el Apache, IIS, etc.), recibe el mensaje y al ver que la extension es \"php\" solicita al interprete de PHP (que es otro programa que se ejecuta en el servidor web) que le envíe el archivo.</p>\n\n<p>4 - El intérprete PHP lee desde el disco el archivo pagina1.php</p>\n\n<p>5 - El intérprete PHP ejecuta los comandos contenidos en el archivo y eventualmente se comunica con un gestor de base de datos (ejemplos de ellos pueden ser MySql, MariaDB, Oracle, Informix, SQL Server, etc.) </p>\n\n<p>6 - Luego de ejecutar el programa contenido en el archivo envía éste al servidor web.</p>\n\n<p>7 - El servidor web envía la página al cliente que la había solicitado.</p>\n\n<p>8 - El navegador muestra en pantalla el archivo que envió el servidor web. </p>\n\n<p>Para aquellas personas que conocen otros lenguajes de programación (C - Java - C# - Pascal etc.) la salida de los resultados normalmente es la pantalla, en PHP la salida es la página HTML (luego ésta viaja por internet y llega al cliente que la solicitó)</p>\n\n</div>"
    },
    {
        "title": "2 - Instalación del entorno XAMPP",
        "subtitle": "Actualmente XAMPP es el entorno más popular de desar ...",
        "content": "<div>\n<p>Actualmente XAMPP es el entorno más popular de desarrollo con PHP. Este software contiene todo lo que necesitamos para probar en forma local en nuestro equipo los programas que codifiquemos en PHP.</p>\n\n<p>Procedemos a descargar XAMPP de la siguiente página: <a target=\"_blank\" href=\"https://www.apachefriends.org/es/index.html\">aquí</a>.</p><p> \n<img src=\"asset:assets/img/2_phpya1.jpg\"><br>\n\n\n</p><p>Luego de descargarlo procedemos a ejecutar el instalador:</p>\n<img src=\"asset:assets/img/2_phpya2.jpg\" border=\"0\" alt=\"instalación de XAMPP\"><br>\n<p>Seleccionamos los programas mínimos que necesitamos para trabajar con PHP, MySQL, Apache y phpMyAdmin:</p>\n<img src=\"asset:assets/img/2_phpya3.jpg\" border=\"0\" alt=\"instalación de XAMPP\"><br>\n<p>Elegimos el directorio donde se instalará\":</p>\n<img src=\"asset:assets/img/2_phpya4.jpg\" border=\"0\" alt=\"instalación de XAMPP\"><br>\n<p>Luego comienza la instalación propiamente del software:</p>\n<img src=\"asset:assets/img/2_phpya5.jpg\" border=\"0\" alt=\"instalación de XAMPP\"><br>\n<p>Una vez finalizada la instalación aparece un diálogo con un 'checkbox' para iniciar el programa XAMPP inmediatamente:</p>\n<img src=\"asset:assets/img/2_phpya6a.jpg\" border=\"0\" alt=\"instalación de XAMPP\"><br>\n<p>Si dejamos chequeada la opción \"Do you want to start the Control Panel now?\" se inicia el XAMPP</p>\n<img src=\"asset:assets/img/2_phpya6.jpg\" border=\"0\" alt=\"instalación de XAMPP\"><br>\n<p>Debemos iniciar los programas \"Apache\" y \"MySQL\" presionando los botones 'Start':</p>\n<img src=\"asset:assets/img/2_phpya7.jpg\" border=\"0\" alt=\"instalación de XAMPP\"><br>\n<p>Si el software está correctamente instalado y no hay conflicto con otros deberán aparecer en verde los paneles de estado.</p>\n<p>Siempre que codifiquemos y probemos los programas en PHP el programa XAMPP junto con 'Apache' y 'MySQL' deben estar ejecutandose.</p>\n<p>En el escritorio aparece un ícono del panel de control de XAMPP o podemos arrancarlo desde el directorio donde lo instalamos mediante el programa:</p>\n<img src=\"asset:assets/img/2_phpya8.jpg\" border=\"0\" alt=\"instalación de XAMPP\"><br>\n<p>El siguiente paso es probar nuestro primer programa en PHP.</p>\n\n<h3>Acotaciones</h3>\n<p>Existe otro entorno popular llamado WAMPSERVER que nos instala y administra PHP, MySQL y Apache.</p>\n<p>Si ya lo tiene instalado y ya está habituado a trabajar con él, no es necesario que instale el XAMPP.</p>\n<p>El entorno de WAMPSERVER lo puede descargar del sitio: \n<a target=\"_blank\" href=\"http://www.wampserver.com/en/\">WAMPSERVER</a>.</p><p> \n</div>"
    },
    {
        "title": "3 - Programa \"Hola Mundo\" en PHP",
        "subtitle": "En este curso suponemos que conoce los elementos pri ...",
        "content": "<div>\n<p>En este curso suponemos que conoce los elementos principales de HTML y algún lenguaje de programación, por lo menos un poquito (puedes iniciar los conceptos básicos de programación en <a href=\"https://www.tutorialesprogramacionya.com/javaya\" target=\"_blank\">JavaYa</a>)</p>\n<p>Para agregar un programa PHP dentro de una página HTML debemos por un lado al crear el archivo definirlo con extensión php (a diferencia de las páginas estáticas que tienen extensión htm o html)  y dentro del contenido de la página, encerrar el programa entre los símbolos</p>\n<pre> \n  &lt;?php [aquí el programa PHP] ?&gt;\n</pre>\n<p>El comando de PHP para imprimir dentro de la página se llama echo. Nuestro  programa \"Hola Mundo\" será entonces: </p>\n<pre class=\"recuadroborde\">&lt;html&gt;\n\n&lt;head&gt;&lt;/head&gt;\n\n&lt;body&gt;\n  &lt;?php\n  echo \"Hola Mundo\";\n  ?&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;\n</pre>\n<p>Es decir que la página que se generará al ejecutarse el programa será:</p>\n  \n<pre>\n&lt;html&gt;\n\n&lt;head&gt;&lt;/head&gt;\n\n&lt;body&gt;\n  Hola Mundo&lt;/body&gt;\n\n&lt;/html&gt;</pre><br>\n\n<p>Podemos utilizar como editor de texto para codificar el programa PHP el <strong>VS Code</strong>.</p>\n<p><strong>VS Code</strong>: Es un editor de texto que agregando extensiones podemos trabajar con PHP con herramientas para programar y depurar programas. Es creado y mantenido por la empresa Microsoft. Es open source y multiplataforma (Windows, Linux y Mac)<br>\n</p><p>En el último año se esta convirtiendo en el editor de texto más utilizado por los programadores profesionales de todo el mundo.<br>\n</p><p>Podemos comprobar esta situación si visitamos la encuesta de desarrolladores 2019 del sitio de \nstackoverflow</p>\n<p>Le sugiero si va ha utilizar el VS Code, luego se tome su tiempo para conocer en forma más profunda el editor VS Code mediante el tutorial <a href=\"https://www.tutorialesprogramacionya.com/herramientas/vscodeya/\" target=\"_blank\"> VS Code Ya</a></p>\n\n\n<p>Luego de tipear el programita con el editor de texto:</p>\n<img src=\"asset:assets/img/3_foto011.jpg\" border=\"0\" alt=\"Editor PHP VSCode\"><br>\n\n<p>Debemos almacenar dicho archivo en la subcarpeta 'htdocs' que depende de la carpeta 'xampp' (en mi caso instalé el XAMPP en c:/xampp)</p>\n<p>Lo almacenamos con el nombre pagina1.php en la carpeta C:/xampp/htdocs</p>\n<p>Este directorio es el que el servidor web Apache tiene asignado para recuperar páginas cuando se las solicitamos desde un navegador.</p>\n<p>Ya tenemos almacenado el archivo en la carpeta 'htdocs' del 'xampp', ahora procedemos a solicitar dicha página desde un navegador web, para esto en la barra del navegador escribimos: </p>\n<pre>http://localhost/pagina1.php\n</pre>\n<p><img src=\"asset:assets/img/3_foto012.jpg\" border=\"0\" alt=\"Navegador web\"></p>\n<p>Tenemos en el navegador el resultado de la ejecución del programa.</p>\n\n\n<p>Como podemos ver, es muy poco útil este programita, ya que el resultado de la ejecución de este programa PHP será siempre el mismo, es decir mostrar el texto \"Hola Mundo\".</p>\n\n<br>\n<br>\n\n<h2>Problema resuelto.</h2>\n<p>Copiar el contenido de este cuadro de texto al VS Code y almacenarlo en la carpeta c:/xampp/htdocs con un nombre con extensión php.<br>\n  luego abrir el navegador (Chrome, FireFox, IExplorer etc.) y en la barra de direcciones tipear:<br> http://localhost/pagina1.php (o el nombre del\narchivo que le dió)  </p>\n<pre>&lt;html&gt;\n\n&lt;head&gt;&lt;/head&gt;\n\n&lt;body&gt;\n  &lt;?php\n  echo \"Hola Mundo\";\n  echo \"&lt;br&gt;\";\n  echo \"como estas?\";\n  ?&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;</pre>\n<h2>Problema propuesto.</h2>\n<p>Confeccione un programa que muestre una serie de mensajes en la página empleando el comando echo. Tenga en cuenta que cuando utiliza el comando echo el mensaje se debe encerrar entre comillas dobles (como veremos más adelante también podrá encerrarse entre simples comillas).<br>\nToda instrucción finaliza con punto y coma.</p>\n<pre>&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n\n  &lt;?php\n  echo \"Mi nombre es Juan.\";\n  echo \"Tengo 20 años.\";\n  ?&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;</pre>\n</div>"
    },
    {
        "title": "4 - Un programita mas util que \"Hola Mundo\"",
        "subtitle": "Un problema sencillo que se nos puede presentar ...",
        "content": "<div>\n<p>Un problema sencillo que se nos puede presentar y que no se puede resolver empleando solo HTML es que una página esté disponible sólo los 10 primeros días del mes.</p>\n<p>Mostraremos un cartel que diga que el sitio se encuentra disponible si la fecha es menor o igual a 10, en caso contrario mostraremos un mensaje de sitio fuera de servicio.</p>\n\n<p>Para obtener la fecha del servidor web debemos llamar a la función date y requerir sólo el día:</p>\n<pre>\\$dia=date(\"d\");\n</pre>\n\n<p>A las variables en PHP se les antecede el caracter \\$. Si a la función date le pasamos el string \"d\" retornará sólo el día (si queremos la fecha completa: \\$fecha=date(\"d/m/Y\")</p>\n\n<p>Para verificar si la variable \\$dia es menor o igual a 10, debemos emplear la instrucción if, similar a otros lenguajes.</p>\n<p>Entonces la página con el programa queda de la siguiente forma:</p>\n<pre class=\"recuadroborde\">&lt;html&gt;\n\n&lt;head&gt;&lt;/head&gt;\n\n&lt;body&gt;\n  &lt;?php\n  \\$dia = date(\"d\");\n  if (\\$dia &lt;= 10) {\n    echo \"sitio activo\";\n  } else {\n    echo \"sitio fuera de servicio\";\n  }\n  ?&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;\n</pre>\n\n<p>Los nombres de variables son sensibles a mayúsculas y minúsculas, por lo que si la escribimos en minúscula inicialmente debemos respetar en el resto del programa. En cambio las instrucciones del lenguaje PHP no son sensibles por lo que si deseamos escribir IF o if, las dos formas estarán bien (es más común escribir las palabras claves siempre en minúsculas)</p>\n<p>La condición del if debe ir obligatoriamente entre paréntesis. Los operadores relacionales disponibles son:</p>  \n<pre>&gt; Mayor\n&gt;= Mayor o igual\n&lt; Menor\n&lt;= Menor o igual\n== Igual\n!= Distinto\n</pre> \n<p>Si la condición se verifica verdadera se ejecuta el primer bloque encerrado entre llaves, en caso de verificarse falsa la condición se ejecuta el bloque entre llaves que le sigue al else.</p>\n<h2>Problema resuelto.</h2>\n<p>Copiar el contenido de este cuadro de texto al VS Code y almacenarlo en la carpeta c:/xampp/htdocs con un nombre con extensión php.<br>\n  luego abrir el navegador (Chrome, FireFox, IExplorer etc.) y en la barra de direcciones tipear:<br> http://localhost/pagina1.php (o el nombre del\narchivo que le dió)  </p>\n<pre>&lt;html&gt;\n\n&lt;head&gt;&lt;/head&gt;\n\n&lt;body&gt;\n\n  &lt;?php\n  \\$dia = date(\"d\");\n  if (\\$dia &lt;= 10) {\n    echo \"sitio activo\";\n  } else {\n    echo \"sitio fuera de servicio\";\n  }\n  ?&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;</pre>\n<h2>Problema propuesto.</h2>\n<p>Sabiendo que la función rand nos retorna un valor aleatorio entre un rango de dos enteros:</p>\n<pre>\\$num=rand(1,100);\n</pre>\n<p>En la variable \\$num se almacena un valor entero que la computadora genera en forma aleatoria entre 1 y 100.</p>\n<p>Hacer un programa que lo muestre por pantalla al valor generado. Mostrar además si es menor o igual a 50 o si es mayor.</p>\n<p>Para imprimir el contenido de una variable también utilizamos el comando echo:</p>\n<pre>echo \\$num;\n</pre>\n<pre>&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n\n  &lt;?php\n  \\$num = rand(1, 100);\n  echo \\$num;\n  echo \"&lt;br&gt;\";\n  if (\\$num &lt;= 50) {\n    echo \"El número es menor o igual a 50.\";\n  } else {\n    echo \"El número es mayor a 50.\";\n  }\n  ?&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;</pre>\n</div>"
    },
    {
        "title": "5 - Tipos de variables",
        "subtitle": "Los nombres de variables comienzan con el caracter ...",
        "content": "<div>\n<p>Los nombres de variables comienzan con el caracter \\$ y son sensibles a mayúsculas y minúsculas (no así las palabras claves del lenguaje)</p>\n<p>En PHP no es necesario definir el tipo de dato que almacena antes de utilizarla, las mismas se crean en el momento de emplearlas. Las variables se declaran cuando se le asigna un valor, por ejemplo:</p>\n<pre>\\$dia = 24;  //Se declara una variable de tipo integer.\n\\$sueldo = 758.43; //Se declara una variable de tipo double.\n\\$nombre = \"juan\"; //Se declara una variable de tipo string. \n\\$exite = true; //Se declara una variable boolean.\n</pre>\n<p>También podemos hacer notar que para disponer comentarios de línea debemos utilizar dos caracteres //</p>\n<p>Para la impresión de variables utilizaremos inicialmente el comando echo. Un programa completo que inicializa y muestra el contenido de cuatro variables de distinto tipo es:</p>\n<p class=\"titulopagina\">pagina1.php</p>\n<pre class=\"recuadroborde\">&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n  &lt;?php\n  \\$dia = 24; //Se declara una variable de tipo integer.\n  \\$sueldo = 758.43; //Se declara una variable de tipo double.\n  \\$nombre = \"juan\"; //Se declara una variable de tipo string.\n  \\$exite = true; //Se declara una variable boolean.\n  echo \"Variable entera:\";\n  echo \\$dia;\n  echo \"&lt;br&gt;\";\n  echo \"Variable double:\";\n  echo \\$sueldo;\n  echo \"&lt;br&gt;\";\n  echo \"Variable string:\";\n  echo \\$nombre;\n  echo \"&lt;br&gt;\";\n  echo \"Variable boolean:\";\n  echo \\$exite;\n  ?&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;\n</pre>\n<p>Hemos utilizado un comando echo para mostrar los mensajes, otro el contenido de variables y finalmente otro para imprimir un elemento HTML. Este proceso puede acortarse un poco pero para que sea más claro inicialmente tomaremos el camino largo de hacer la impresión de un dato con cada comando echo.</p>\n<br>\n<br>\n<h2>Problema resuelto.</h2>\n<p>Copiar el contenido de este cuadro de texto al VS Code y almacenarlo en la carpeta c:/xampp/htdocs con un nombre con extensión php.<br>\n  luego abrir el navegador (Chrome, FireFox, IExplorer etc.) y en la barra de direcciones tipear:<br> http://localhost/pagina1.php (o el nombre del\narchivo que le dió)  </p>\n<pre>&lt;html&gt;\n\n&lt;head&gt;&lt;/head&gt;\n\n&lt;body&gt;\n  &lt;?php\n  \\$dia1 = 15;\n  \\$dia2 = 30;\n  echo \"El valor de la primer variable es:\";\n  echo \\$dia1;\n  echo \"&lt;br&gt;\";\n  echo \"El valor de la segunda variable es:\";\n  echo \\$dia2;\n  ?&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;</pre>\n<h2>Problema propuesto.</h2>\n<p>Definir una variable de cada tipo: integer, double, string y boolean. Luego imprimirlas en la página, una por línea.</p><form name=\"formulario\" action=\"\" target=\"ventanaForm\" onsubmit=\"abrirVentana()\" method=\"post\">\nSolución\n<pre>&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n\n  &lt;?php\n\n  \\$edad = 20;\n  \\$peso = 90.25;\n  \\$nombre = \"juan\";\n  \\$existe = true;\n  echo \"Variable integer:\";\n  echo \\$edad;\n  echo \"&lt;br&gt;\";\n  echo \"Variable double:\";\n  echo \\$peso;\n  echo \"&lt;br&gt;\";\n  echo \"Variable string:\";\n  echo \\$nombre;\n  echo \"&lt;br&gt;\";\n  echo \"Variable boolean:\";\n  echo \\$existe;\n\n  ?&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;</pre>\n</div>"
    },
    {
        "title": "6 - Variables de tipo string",
        "subtitle": "Una variable de este tipo puede almacenar una serie ...",
        "content": "<div>\n<p>Una variable de este tipo puede almacenar una serie de caracteres.</p>\n<pre>\\$cadena1=\"Hola\";\n\\$cadena2=\"Mundo\";\necho \\$cadena1.\" \".\\$cadena2;\n</pre>\n\n<p>Para concatenar string empleamos el operador . (punto)</p>\n<p>Tengamos en cuenta que el comando echo de más arriba lo podemos hacer más largo de la siguiente forma:</p>\n<pre>echo \\$cadena1;\necho \" \";\necho \\$cadena2;\n</pre>\n\n<p>A medida que uno haga ejercicios podremos resumir en un solo comando echo la salida de múltiples variables.</p>\n<p>Cuando una cadena encerrada entre comillas dobles contiene una variable en su interior, ésta se trata como tal, por lo tanto se utilizará su contenido para el almacenamiento:</p>\n<pre>\\$dia=10;\n\\$fecha=\"Hoy es \\$dia\";\necho \\$fecha;\n</pre>\n\n<p>En pantalla se muestra: Hoy es 10</p>\n<p>Es decir, en la cadena, se sustituye el nombre de la variable \\$dia, con el contenido de la misma.</p>\n\n<p>Una cadena se puede definir con las comillas simples (pero es importante tener en cuenta que no se sustituyen las variables si empleamos comillas simples):</p>\n<pre>\\$nombre='juan carlos';\n</pre>\n<p>Veremos que en muchos casos se utiliza el concepto de sustitución de variables dentro de un string en PHP por lo que nos acostumbraremos en un principio a utilizar las comillas dobles para definir los string en nuestros programas.</p>\n<br>\n<br>\n\n<h2>Problema resuelto.</h2>\n<p>Copiar el contenido de este cuadro de texto al VS Code y almacenarlo en la carpeta c:/xampp/htdocs con un nombre con extensión php.<br>\n  luego abrir el navegador (Chrome, FireFox, IExplorer etc.) y en la barra de direcciones tipear:<br> http://localhost/pagina1.php (o el nombre del\narchivo que le dió)  </p>\n<pre>&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n\n  &lt;?php\n  \\$cadena1 = \"diego\";\n  \\$cadena2 = \"juan\";\n  \\$cadena3 = \"ana\";\n  \\$todo = \\$cadena1 . \\$cadena2 . \\$cadena3 . \"&lt;br&gt;\";\n  echo \\$todo;\n  \\$edad1 = 24;\n  echo \\$cadena1 . \" tiene \\$edad1 de edad\";\n  ?&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;</pre>\n<h2>Problema propuesto.</h2>\n<p>Definir tres variables enteras. Luego definir un string que incorpore dichas variables y las sustituya en tiempo de ejecución.</p>\n<p>Recordar que una variable se sustituye cuando el string está encerrado por comillas dobles:</p>\n<pre>\\$precio=90;\necho \"La computadora tiene un precio de \\$precio\";\n</pre>\n<pre>&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n\n  &lt;?php\n\n  \\$nota1 = 10;\n  \\$nota2 = 7;\n  \\$nota3 = 8;\n  echo \"Juan aprobó la materia con las notas \\$nota1, \\$nota2 y \\$nota3\";\n\n  ?&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;</pre>\n</div>"
    },
    {
        "title": "7 - Estructura condicional (if)",
        "subtitle": "Una variable de este tipo puede almacenar una serie ...",
        "content": "<div>\n<p>Cuando se pretende que el programa, una vez llegado a un cierto punto, tome un camino concreto en determinados casos y otro diferente si las condiciones de ejecución difieren, se utiliza el conjunto de instrucciones:<br>\n if,  else  y  elseif.  La estructura base de este tipo de instrucciones es la siguiente: </p>\n<pre>if (Condición) \n{\n  Instrucción a1;\n  Instrucción a2;\n}\nelse\n{\n  Instrucción b1;\n  Instrucción b2;\n}\n</pre>\n<p>Cuando la ejecución llega al punto donde se encuentra la instrucción if, el programa verificará el cumplimiento o no de la condición. Si la condición es verdadera se ejecutarán las instrucciones a1 y a2, de lo contrario, se ejecutarán las instrucciones b1 y b2.</p>\n<p>En los casos en que las condiciones sean varias, se pueden utilizar los if de un modo denominado anidado o anillado, como se indica de la manera siguiente:</p>\n<pre>if (Condicion 1) \n{\n  Instrucción a1;\n  Instrucción a2;\n}\nelse\n{\n  if (Condicion 2)\n  {               \n    Instrucción b1;\n    Instrucción b2;\n  }\n  else\n  {\n    Instrucción c1;\n    Instrucción c2;\n  }\n}\n</pre>\n<p>De este modo se pueden introducir tantas condiciones como se quiera dentro de la condición principal. Una variante de este sistema es utilizando la sentencia elseif, que permite en una sola línea introducir una condición adicional:</p>\n<pre>if (Condicion 1) \n{\n  Instrucción a1;\n  Instrucción a2;\n}\nelseif (Condicion 2)\n{\n  Instrucción b1;\n  Instrucción b2;\n}\nelse\n{\n  Instrucción c1;\n  Instrucción c2; \n}\n</pre>\n\n<p>Para las condiciones tener en cuenta que disponemos de los siguientes operadores:</p>\n<pre>== para ver si una variable es igual a otra.\n!= distinto.\n&gt;= mayor o igual.\n&gt; mayor.\n&lt;= menor o igual \n&lt; menor \n</pre>\n<p>La mejor forma de entender esta estructura condicional es por medio de ejemplos. El primero que nos plantearemos es generar un valor aleatorio (es decir lo elige la máquina al azar, como extraer una bolilla de un bolillero de lotería) comprendido entre 1 y 10. Luego mostraremos un mensaje si es menor o igual a 5 o si es mayor a 5.</p>\n<p>El programa completo es:</p>\n<pre class=\"recuadroborde\">&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n  &lt;?php\n  $valor = rand(1, 10);\n  echo \"El valor sorteado es $valor&lt;br&gt;\";\n  if ($valor &lt;= 5) {\n    echo \"Es menor o igual a 5\";\n  } else {\n    echo \"Es mayor a 5\";\n  }\n  ?&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;\n</pre>\n<p>Es importante recordar que siempre la condición del if debe ir entre paréntesis. Si la condición del if se verifica verdadera (es decir el número sorteado es menor o igual a 5) ejecuta el primer bloque que se encuentra entre llaves. En caso de verificarse falsa la condición del if se ejecuta el bloque entre llaves que se encuentra después del else.</p>\n<p>El valor aleatorio lo generamos llamando a la función rand pasándole el valor mínimo y máximo:</p>\n<pre>$valor=rand(1,10);\n</pre>\n<p>Imprimimos el valor generado a los efectos de controlar el resultado:</p>\n<pre>echo \"El valor sorteado es $valor&lt;br&gt;\";\n</pre>\n<p>En el primer problema tenemos solo dos caminos posibles, el valor es menor o igual a cinco o es mayor.En un segundo ejemplo mostraremos como disponer una estructura condicional if anidada.</p>\n<p>El problema es el siguiente: Generar un valor aleatorio entre 1 y 100. Luego mostrar si tiene 1,2 o 3 dígitos.</p>\n<p>Como podemos observar estamos en presencia de un problema que tiene tres caminos posibles. El valor puede tener 1 dígito, 2 dígitos o 3 dígitos. Si pensamos un poco podremos identificar que para que tenga un dígito debe generarse un valor entre 1 y 9, para que tenga dos dígitos deberá estar comprendido entre 10 y 99, y finalmente para tener 3 dígitos deberá ser el valor 100.</p>\n<p>La página con el programa respectivo es:</p>\n<pre class=\"recuadroborde\">&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n  &lt;?php\n  $valor = rand(1, 100);\n  echo \"El valor sorteado es $valor&lt;br&gt;\";\n  if ($valor &lt;= 9) {\n    echo \"Tiene un dígito\";\n  } else {\n    if ($valor &lt; 100) {\n      echo \"Tiene 2 dígitos\";\n    } else {\n      echo \"Tiene 3 dígitos\";\n    }\n  }\n  ?&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;\n</pre>\n<p>Es importante notar como la segunda estructura if se encuentra contenida entre las llaves del else del primer if. Es decir que si el valor aleatorio es menor o igual a 9 se ejecuta el bloque del verdadero del primer if y no se ejecuta por lo tanto el if anidado en el else. Por el contrario si la condición del primer if se verifica falsa se ejecuta el bloque del else del primer if, la misma contiene una estructura if con sus bloques del verdadero y falso.</p>\n\n<p>A modo ilustrativo el mismo ejemplo resuelto con la estructura if/elseif será:</p>\n<pre class=\"recuadroborde\">&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n  &lt;?php\n  $valor = rand(1, 100);\n  echo \"El valor sorteado es $valor&lt;br&gt;\";\n  if ($valor &lt;= 9) {\n    echo \"Tiene un dígito\";\n  } elseif ($valor &lt; 100) {\n    echo \"Tiene 2 dígitos\";\n  } else {\n    echo \"Tiene 3 dígitos\";\n  }\n  ?&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;\n</pre>\n<p>Si uno tiene mucha práctica con otros lenguajes de programación esta estructura de if anidados le será mas adecuada, en caso que haya empezado a programar hace poco será conveniente que elija y practique la primera forma.</p>\n<br>\n<br>\n\n<h2>Problema resuelto.</h2>\n<p>Copiar el contenido de este cuadro de texto al VS Code y almacenarlo en la carpeta c:\\xampp\\htdocs con un nombre con extensión php.<br>\n  luego abrir el navegador (Chrome, FireFox, IExplorer etc.) y en la barra de direcciones tipear:<br> http://localhost/pagina1.php (o el nombre del\narchivo que le dió)  </p>\n<pre>&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n\n  &lt;?php\n  //Generar un valor aleatorio entre 1 y 100. Luego mostrar\n  //si tiene 1,2 o 3 dígitos.\n\n  $valor = rand(1, 100);\n  echo \"El valor sorteado es $valor&lt;br&gt;\";\n  if ($valor &lt;= 9) {\n    echo \"Tiene un dígito\";\n  } else {\n    if ($valor &lt; 100) {\n      echo \"Tiene 2 dígitos\";\n    } else {\n      echo \"Tiene 3 dígitos\";\n    }\n  }\n  ?&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;</pre>\n<h2>Problema propuesto.</h2>\n<p>Generar un valor aleatorio entre 1 y 3. Luego imprimir en castellano el número (Ej. si se genera el 3 luego mostrar en la página el string \"tres\").</p>\n<p>Para ver si una variable es igual a cierto valor debemos plantear una condición similar a:</p>\n<pre>if ($valor==3)\n{\n  //algoritmo\n}\n</pre>\n<pre>&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n\n  &lt;?php\n\n  $num = rand(1, 3);\n  if ($num == 1) {\n    echo \"uno\";\n  } else {\n    if ($num == 2) {\n      echo \"dos\";\n    } else {\n      echo \"tres\";\n    }\n  }\n\n  ?&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;</pre>\n</div>"
    },
    {
        "title": "8 - Estructuras repetitivas (for - while - do/while)",
        "subtitle": "Las estructuras repetitivas son similares al lenguaje C ..",
        "content": "<div>\n<p>Las estructuras repetitivas son similares al lenguaje C, JavaScript, Java etc.</p>\n<p>Estructura for:</p>\n<pre>for([Inicialización de la variable];[Condición];[Incremento o decremento de la variable])\n{\n  [Instrucciones];\n}\n</pre>\n<p>El primer ejemplo que haremos es mostrar en la página los números del 1 al 100:</p>\n<p class=\"titulopagina\">pagina1.php</p>\n<pre class=\"recuadroborde\">&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n  &lt;?php\n  for (\\$f = 1; \\$f &lt;= 100; \\$f++) {\n    echo \\$f;\n    echo \"&lt;br&gt;\";\n  }\n  ?&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;\n</pre>\n<p>Quien no ha visto la estructura for en otro lenguaje pasamos a explicarla:</p>\n<pre>  for (\\$f = 1; \\$f &lt;= 100; \\$f++) {\n    echo \\$f;\n    echo \"&lt;br&gt;\";\n  }\n</pre>\n<p>El primer argumento del for es la inicialización de una variable, en este caso se inicializa la variable \\$f con el valor 1. Este primer argumento del for se ejecuta solo una vez. Luego se ejecuta el segundo argumento que es la condición. Si la misma se verifica como verdadera se ejecuta todo el bloque comprendido entre las llaves de apertura y cerrado. Luego de haberse ejecutado el bloque repetitivo se ejecuta el tercer argumento del for que es el incremento de la variable, en este caso \\$f++ incrementa el contenido de la variable \\$f en 1 (también podemos poner en lugar de \\$f++ la asignación \\$f=\\$f+1)</p>\n<p>Luego del incremento de la variable se ejecuta nuevamente la condición del for (segundo argumento), de validarse nuevamente verdadero pasa a ejecutar el bloque repetitivo.<br>\nEste ciclo se repite hasta que la condición del for se verifica falsa.</p>\n\n<p>La segunda estructura repetitiva es:</p>\n<pre>while (condición)\n{\n  [Instrucciones];\n}\n</pre>\n<p>Esta estructura está en casi todos los lenguajes. El bloque se repite mientras la condición del while sea verdadera.</p>\n<p>La condición del while se verifica antes de ingresar al bloque a repetir. Si la misma se verifica falsa la primera vez no se ejecutará el bloque.</p>\n<p>Veamos un ejemplo: Generar un valor aleatorio entre 1 y 100, luego imprimir en la página desde 1 hasta el valor generado (de uno en uno):</p>\n<pre class=\"recuadroborde\">&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n  &lt;?php\n  \\$valor = rand(1, 100);\n  \\$inicio = 1;\n  while (\\$inicio &lt;= \\$valor) {\n    echo \\$inicio;\n    echo \"&lt;br&gt;\";\n    \\$inicio++;\n  }\n  ?&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;\n</pre>\n<p>La variable \\$inicio tiene el valor 1 antes de ingresar al while. Cada vez que se ejecuta una vez el bloque del while se incrementa \\$inicio en uno. Cuando \\$inicio supere la variable \\$valor finalizará la estructura repetitiva y pasará a ejecutarse la instrucción inmediatamente siguiente a la llave de cerrado del while.</p>\n<p>Es importante notar que luego de la condición del while NO disponemos PUNTO y COMA.</p>\n\n<p>Por último tenemos en el lenguaje una estructura repetitiva similar al while llamada do/while, donde la condición se verifica luego de ejecutarse el bloque repetitivo.</p>\n<pre>do \n{\n  [Instrucciones];\n} while (condición);\n</pre>\n<p>Queda como tarea intentar hacer una página empleando esta estructura. Tener en cuenta que al final de la línea del do/while SI LLEVA punto y coma.</p>\n<h2>Problema resuelto.</h2>\n<p>Copiar el contenido de este cuadro de texto al VS Code y almacenarlo en la carpeta c:/xampp/htdocs con un nombre con extensión php.<br>\n  luego abrir el navegador (Chrome, FireFox, IExplorer etc.) y en la barra de direcciones tipear:<br> http://localhost/pagina1.php (o el nombre del\narchivo que le dió)  </p>\n<pre>&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n\n  &lt;?php\n  //Mostramos los números de los días del 1 a la fecha actual;\n  \\$dia = date(\"d\");\n  \\$inicio = 1;\n  while (\\$inicio &lt;= \\$dia) {\n    echo \\$inicio . \"&lt;br&gt;\";\n    \\$inicio++;\n  }\n  ?&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;</pre>\n<h2>Problema propuesto.</h2>\n<p>Mostrar la tabla de multiplicar del 2. Emplear el for, luego el while y por último el do/while.<br>\nLa estructura for permite incrementar una variable de 2 en 2:</p>\n<pre>  for (\\$f = 2; \\$f &lt;= 20; \\$f = \\$f + 2) \n</pre>\n<pre>&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n\n  &lt;?php\n\n  echo \"Tabla del 2 con el for\";\n  echo \"&lt;br&gt;\";\n  for (\\$f = 2; \\$f &lt;= 20; \\$f = \\$f + 2) {\n    echo \\$f;\n    echo \"-\";\n  }\n  echo \"&lt;br&gt;\";\n  echo \"Tabla del 2 con el while\";\n  echo \"&lt;br&gt;\";\n  \\$f = 2;\n  while (\\$f &lt;= 20) {\n    echo \\$f;\n    echo \"-\";\n    \\$f = \\$f + 2;\n  }\n  echo \"&lt;br&gt;\";\n  echo \"Tabla del 2 con el do/while\";\n  echo \"&lt;br&gt;\";\n  \\$f = 2;\n  do {\n    echo \\$f;\n    echo \"-\";\n    \\$f = \\$f + 2;\n  } while (\\$f &lt;= 20);\n\n  ?&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;</pre>\n</div>"
    },
    {
        "title": "9 - Envío de datos de un FORMULARIO (controles text y submit)",
        "subtitle": "Una actividad fundamental en PHP es la recolección de datos ...",
        "content": "<div>\n<p>Una actividad fundamental en PHP es la recolección de datos de un formulario HTML.</p>\n<p>El proceso para el manejo de FORMULARIOS requiere generalmente dos páginas, una que implementa el formulario y otra que procesa los datos cargados en el formulario.</p>\n<p>La estructura mínima de un formulario es la siguiente: para la entrada de un nombre de persona, un objeto text y un botón para el envío del dato al servidor:</p>\n<p class=\"titulopagina\">pagina1.html</p>\n<pre class=\"recuadroborde\">&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Formulario de entrada del dato&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n  &lt;form method=\"post\" action=\"pagina2.php\"&gt;\n    Ingrese su nombre:\n    &lt;input type=\"text\" name=\"nombre\"&gt;\n    &lt;br&gt;\n    &lt;input type=\"submit\" value=\"confirmar\"&gt;\n  &lt;/form&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;\n</pre>\n<p>Esta página está completamente codificada en HTML, es decir no hay un script en PHP, el formulario contiene elementos HTML puros.</p>\n<p>El elemento &lt;form&gt; y &lt;/form&gt; nos permite definir un formulario en la página.</p>\n<p>Este elemento tiene dos propiedades que debemos inicializar obligatoriamente: action y method.</p>\n<p>La propiedad action indica el nombre del archivo que recibirá los datos ingresados por el operador en el formulario y que serán enviados al servidor cuando se presione el botón (submit). La propiedad method indica como se organizan esos datos para enviarlos al servidor, pudiendo ser mediante los métodos post o get (normalmente los datos de un formulario se envían mediante el método post).</p>\n<p>Para crear un cuadro de texto para el ingreso del nombre debemos definir un objeto de tipo \"text\" y darle un nombre: </p>\n<pre>    &lt;input type=\"text\" name=\"nombre\"&gt;\n</pre>\n<p>La propiedad type nos permite definir el tipo de control y con la propiedad name indicamos el nombre del control.</p>\n<p>Por último todo formulario tiene un botón de tipo submit: </p>\n<pre>  &lt;input type=\"submit\" value=\"confirmar\"&gt;\n</pre>\n<p>También utilizamos el elemento input pero en la propiedad type indicamos que se trata de un botón de envío de datos. En la propiedad value indicamos el texto que queremos que aparezca en el botón.</p>\n<p>Ahora necesitamos una página con un pequeño programa en PHP que procese los datos ingresados en el formulario:</p>\n<p class=\"titulopagina\">pagina2.php</p>\n<pre class=\"recuadroborde\">&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Captura de datos del form&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n  &lt;?php\n  echo \"El nombre ingresado es:\";\n  echo \\$_REQUEST['nombre'];\n  ?&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;\n</pre>\n<p>Para acceder al dato en PHP se cuenta con un vector llamado \\$_REQUEST indicando como subíndice el nombre del cuadro de texto que definimos en el formulario (dicho nombre es sensible a mayúsculas y minúsculas)<br>\nEs común indicar entre comillas simples el subíndice en lugar de comillas dobles (con comillas dobles también funciona)</p>\n<p>En nuestro problema sólo mostramos por pantalla el valor ingresado en el formulario HTML:</p>\n<pre>  echo \\$_REQUEST['nombre'];\n</pre>\n<br>\n<br>\n\n<h2>Problema resuelto.</h2>\n<p>Copiar el contenido de este cuadro de texto al VS Code y almacenarlo en la carpeta c:/xampp/htdocs con un nombre con extensión php.<br>\n  luego abrir el navegador (Chrome, FireFox, IExplorer etc.) y en la barra de direcciones tipear:<br> http://localhost/pagina1.php (o el nombre del\narchivo que le dió)  </p>\n<pre>&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Formulario de entrada del dato&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n\n  &lt;form method=\"post\" action=\"pagina2.php\"&gt;\n    Ingrese su nombre:\n    &lt;input type=\"text\" name=\"nombre\"&gt;\n    &lt;br&gt;\n    &lt;input type=\"submit\" value=\"confirmar\"&gt;\n  &lt;/form&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;</pre>\n<pre>&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Captura de datos del form&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n\n  &lt;?php\n  echo \"El nombre ingresado es:\";\n  echo \\$_REQUEST['nombre'];\n  ?&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;</pre>\n<h2>Problema propuesto.</h2>\n<p>Confeccionar un formulario que solicite la carga de un nombre de persona y su edad, luego mostrar en otra página si es mayor de edad (si la edad es mayor o igual a 18)</p>\n<pre>&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n\n  &lt;form method=\"post\" action=\"pagina2.php\"&gt;\n    Ingrese el nombre:\n    &lt;input type=\"text\" name=\"nombre\"&gt;\n    &lt;br&gt;\n    Ingrese la edad:\n    &lt;input type=\"text\" name=\"edad\"&gt;\n    &lt;br&gt;\n    &lt;input type=\"submit\" value=\"confirmar\"&gt;\n  &lt;/form&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;</pre>\n<pre>&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n\n  &lt;?php\n  echo \\$_REQUEST['nombre'];\n  echo \"&lt;br&gt;\";\n  if (\\$_REQUEST['edad'] &gt;= 18) {\n    echo \"Es mayor de edad\";\n  } else {\n    echo \"No es mayor de edad\";\n  }\n  ?&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;</pre>\n</div>"
    },
    {
        "title": "10 - FORMULARIO (control radio)",
        "subtitle": "Una actividad fundamental en PHP es la recolección de datos ...",
        "content": "<div>\n<p>El control HTML radio generalmente se utiliza en conjunto con otros controles radio. Cuando agrupamos un conjunto de controles radio solo uno de ellos puede estar seleccionado y si seleccionamos otro se desmarca el actual.</p>\n<p>Para analizar este control dispondremos un ejemplo:</p>\n<p>Implementar un formulario que solicite la carga de dos enteros, uno en cada text.<br> \nDisponer dos controles de tipo radio que nos permitan seleccionar si queremos sumar o restar los dos valores ingresados:</p>\n<p class=\"titulopagina\">pagina1.html</p>\n<pre class=\"recuadroborde\">&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n  &lt;form action=\"pagina2.php\" method=\"post\"&gt;\n    Ingrese primer valor:\n    &lt;input type=\"text\" name=\"valor1\"&gt;\n    &lt;br&gt;\n    Ingrese segundo valor:\n    &lt;input type=\"text\" name=\"valor2\"&gt;\n    &lt;br&gt;\n    &lt;input type=\"radio\" name=\"radio1\" value=\"suma\"&gt;sumar\n    &lt;br&gt;\n    &lt;input type=\"radio\" name=\"radio1\" value=\"resta\"&gt;restar\n    &lt;br&gt;\n    &lt;input type=\"submit\" name=\"operar\"&gt;\n  &lt;/form&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;\n</pre>\n\n<p>Es importante notar que se trata nuevamente de un archivo HTML puro, que no tiene código PHP.<br>\nLa entrada de los dos números se efectúa en dos controles </p><p>\n</p><pre>    &lt;input type=\"text\" name=\"valor1\"&gt;\n    &lt;input type=\"text\" name=\"valor2\"&gt;\n</pre>\n<p>Es importante notar que cada text tiene un name DIFERENTE.</p>\n<p>Para seleccionar el tipo de operación a efectuar disponemos dos controles de tipo radio:</p>\n<pre>    &lt;input type=\"radio\" name=\"radio1\" value=\"suma\"&gt;sumar\n    &lt;input type=\"radio\" name=\"radio1\" value=\"resta\"&gt;restar\n</pre>\n<p>Ahora vemos que los dos controles de tipo radio tienen el MISMO nombre. Esto es necesario para que el navegador sepa que los dos controles están relacionados (recordar que cuando uno selecciona un radio se debe deseleccionar el otro)</p>\n<p>Desde la otra página accederemos al value del control seleccionado.</p>\n<p>Por último disponemos un control de tipo submit para el envío de los datos del formulario.</p>\n\n<p>El código de la página que procesa el formulario, llamada:\"pagina2.php\" \n(la que indicamos en el elemento FORM del formulario) es:</p>\n<p class=\"titulopagina\">pagina2.php</p>\n<pre class=\"recuadroborde\">&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n  &lt;?php\n  if (\\$_REQUEST['radio1'] == \"suma\") {\n    \\$suma = \\$_REQUEST['valor1'] + \\$_REQUEST['valor2'];\n    echo \"La suma es:\" . \\$suma;\n  } else {\n    if (\\$_REQUEST['radio1'] == \"resta\") {\n      \\$resta = \\$_REQUEST['valor1'] - \\$_REQUEST['valor2'];\n      echo \"La resta es:\" . \\$resta;\n    }\n  }\n  ?&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;\n</pre>\n<p>El vector asociativo \\$_REQUEST tiene tres componentes:</p>\n<pre>  \\$_REQUEST['radio1']\n  \\$_REQUEST['valor1']\n  \\$_REQUEST['valor2']\n</pre>\n<p>En la componente \\$_REQUEST['radio1'] almacena la cadena \"suma\" o \"resta\" según cual se seleccionó en el formulario.</p>\n<p>Con dos if verificamos cual operación está seleccionada y procedemos a efectuarla:</p>\n<pre>  if (\\$_REQUEST['radio1'] == \"suma\") {\n    \\$suma = \\$_REQUEST['valor1'] + \\$_REQUEST['valor2'];\n    echo \"La suma es:\" . \\$suma;\n  } else {\n    if (\\$_REQUEST['radio1'] == \"resta\") {\n      \\$resta = \\$_REQUEST['valor1'] - \\$_REQUEST['valor2'];\n      echo \"La resta es:\" . \\$resta;\n    }\n  }\n</pre>\n<h2>Problema resuelto.</h2>\n<p>Copiar el contenido de este cuadro de texto al VS Code y almacenarlo en la carpeta c:/xampp/htdocs con un nombre con extensión php.<br>\n  luego abrir el navegador (Chrome, FireFox, IExplorer etc.) y en la barra de direcciones tipear:<br> http://localhost/pagina1.php (o el nombre del\narchivo que le dió)  </p>\n<pre>&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n\n  &lt;form action=\"pagina2.php\" method=\"post\"&gt;\n    Ingrese primer valor:\n    &lt;input type=\"text\" name=\"valor1\"&gt;\n    &lt;br&gt;\n    Ingrese segundo valor:\n    &lt;input type=\"text\" name=\"valor2\"&gt;\n    &lt;br&gt;\n    &lt;input type=\"radio\" name=\"radio1\" value=\"suma\"&gt;sumar\n    &lt;br&gt;\n    &lt;input type=\"radio\" name=\"radio1\" value=\"resta\"&gt;restar\n    &lt;br&gt;\n    &lt;input type=\"submit\" name=\"operar\"&gt;\n  &lt;/form&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;</pre>\n<pre>&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n\n  &lt;?php\n  if (\\$_REQUEST['radio1'] == \"suma\") {\n    \\$suma = \\$_REQUEST['valor1'] + \\$_REQUEST['valor2'];\n    echo \"La suma es:\" . \\$suma;\n  } else {\n    if (\\$_REQUEST['radio1'] == \"resta\") {\n      \\$resta = \\$_REQUEST['valor1'] - \\$_REQUEST['valor2'];\n      echo \"La resta es:\" . \\$resta;\n    }\n  }\n\n  ?&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;</pre>\n<h2>Problema propuesto.</h2>\n<p>Solicitar que se ingrese por teclado el nombre de una persona y disponer tres controles de tipo radio que nos permitan seleccionar si la persona: 1-no tiene estudios, 2-estudios primarios y 3-estudios secundarios.<br>\nEn la página que procesa el formulario mostrar el nombre de la persona y un mensaje indicando el tipo de estudios que posee.</p><form name=\"formulario\" action=\"\" target=\"ventanaForm\" onsubmit=\"abrirVentana()\" method=\"post\">\nSolución\n<pre>&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n\n  &lt;form action=\"pagina2.php\" method=\"post\"&gt;\n    Ingrese Nombre:\n    &lt;input type=\"text\" name=\"nombre\"&gt;\n    &lt;br&gt;\n    Estudios:\n    &lt;br&gt;\n    &lt;input type=\"radio\" name=\"radio1\" value=\"sin\"&gt;Sin estudios\n    &lt;br&gt;\n    &lt;input type=\"radio\" name=\"radio1\" value=\"primario\"&gt;Estudios primarios\n    &lt;br&gt;\n    &lt;input type=\"radio\" name=\"radio1\" value=\"secundario\"&gt;Estudios secundarios\n    &lt;br&gt;\n    &lt;input type=\"submit\" value=\"Confirmar\"&gt;\n  &lt;/form&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;</pre>\npagina2.php\n<pre>&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n\n  &lt;?php\n  echo \\$_REQUEST['nombre'];\n  echo \"&lt;br&gt;\";\n  if (\\$_REQUEST['radio1'] == \"sin\") {\n    echo \"Sin estudios.\";\n  }\n  if (\\$_REQUEST['radio1'] == \"primario\") {\n    echo \"Estudios primarios.\";\n  }\n  if (\\$_REQUEST['radio1'] == \"secundario\") {\n    echo \"Estudios secundarios.\";\n  }\n\n  ?&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;</pre>\n</div>"
    },
    {
        "title": "11 - FORMULARIO (control checkbox)",
        "subtitle": "El control checkbox tiene dos estados: seleccionado ...",
        "content": "<div>\n<p>El control checkbox tiene dos estados: seleccionado o no seleccionado.</p>\n<p>Para analizar este control utilizaremos prácticamente el mismo ejemplo que con el objeto radio:</p>\n<p>Implementar un formulario que solicite la carga de dos enteros, uno en cada text.<br> \nDisponer dos controles de tipo checkbox que nos permitan seleccionar si queremos sumar y/o restar los valores ingresados.</p>\n\n<p>El formulario html tiene el siguiente código:</p>\n<p class=\"titulopagina\">pagina1.html</p>\n<pre class=\"recuadroborde\">&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n  &lt;form action=\"pagina2.php\" method=\"post\"&gt;\n    Ingrese primer valor:\n    &lt;input type=\"text\" name=\"valor1\"&gt;\n    &lt;br&gt;\n    Ingrese segundo valor:\n    &lt;input type=\"text\" name=\"valor2\"&gt;\n    &lt;br&gt;\n    &lt;input type=\"checkbox\" name=\"check1\"&gt;sumar\n    &lt;br&gt;\n    &lt;input type=\"checkbox\" name=\"check2\"&gt;restar\n    &lt;br&gt;\n    &lt;input type=\"submit\" name=\"operar\"&gt;\n  &lt;/form&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;\n</pre>\n\n<p>Lo nuevo en este problema son los dos controles de tipo checkbox:</p>\n<pre>    &lt;input type=\"checkbox\" name=\"check1\"&gt;sumar\n    &lt;br&gt;\n    &lt;input type=\"checkbox\" name=\"check2\"&gt;restar\n    &lt;br&gt;\n</pre>\n\n<p>Es importante notar que cada checkbox tiene un nombre distinto.</p>\n<p>Ahora veamos el código de la página que procesa el formulario:</p>\n<p class=\"titulopagina\">pagina2.php</p>\n<pre class=\"recuadroborde\">&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n  &lt;?php\n  if (isset(\\$_REQUEST['check1'])) {\n    \\$suma = \\$_REQUEST['valor1'] + \\$_REQUEST['valor2'];\n    echo \"La suma es:\" . \\$suma . \"&lt;br&gt;\";\n  }\n  if (isset(\\$_REQUEST['check2'])) {\n    \\$resta = \\$_REQUEST['valor1'] - \\$_REQUEST['valor2'];\n    echo \"La resta es:\" . \\$resta;\n  }\n  ?&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;\n</pre>\n<p>Si el checkbox no está seleccionado en el formulario no se crea una entrada en el vector asociativo \\$_REQUEST, para saber si existe una determinada componente en un vector se emplea la función isset, si retorna true significa que existe y por lo tanto el checkbox está seleccionado.</p>\n<p>Disponemos dos if a la misma altura ya que los dos controles de tipo checkbox podrían estar seleccionados.</p>\n<h2>Problema resuelto.</h2>\n<p>Copiar el contenido de este cuadro de texto al VS Code y almacenarlo en la carpeta c:/xampp/htdocs con un nombre con extensión php.<br>\n  luego abrir el navegador (Chrome, FireFox, IExplorer etc.) y en la barra de direcciones tipear:<br> http://localhost/pagina1.php (o el nombre del\narchivo que le dió)  </p>\n<pre>&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n\n  &lt;form action=\"pagina2.php\" method=\"post\"&gt;\n    Ingrese primer valor:\n    &lt;input type=\"text\" name=\"valor1\"&gt;\n    &lt;br&gt;\n    Ingrese segundo valor:\n    &lt;input type=\"text\" name=\"valor2\"&gt;\n    &lt;br&gt;\n    &lt;input type=\"checkbox\" name=\"check1\"&gt;sumar\n    &lt;br&gt;\n    &lt;input type=\"checkbox\" name=\"check2\"&gt;restar\n    &lt;br&gt;\n    &lt;input type=\"submit\" name=\"operar\"&gt;\n  &lt;/form&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;</pre>\nEjecutar ejemplo \n<pre>&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n\n  &lt;?php\n  if (isset(\\$_REQUEST['check1'])) {\n    \\$suma = \\$_REQUEST['valor1'] + \\$_REQUEST['valor2'];\n    echo \"La suma es:\" . \\$suma . \"&lt;br&gt;\";\n  }\n  if (isset(\\$_REQUEST['check2'])) {\n    \\$resta = \\$_REQUEST['valor1'] - \\$_REQUEST['valor2'];\n    echo \"La resta es:\" . \\$resta;\n  }\n  ?&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;</pre>\n<h2>Problema propuesto.</h2>\n<p>Confeccionar un formulario que solicite la carga del nombre de una persona y que permita seleccionar una serie de deportes que practica (futbol, basket, tennis, voley)<br>\nMostrar en la página que procesa el formulario la cantidad de deportes que practica.</p><form name=\"formulario\" action=\"\" target=\"ventanaForm\" onsubmit=\"abrirVentana()\" method=\"post\">\nSolución\n<pre>&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n\n  &lt;form method=\"post\" action=\"pagina2.php\"&gt;\n    Ingrese el nombre:\n    &lt;input type=\"text\" name=\"nombre\"&gt;\n    &lt;br&gt;\n    Deportes que practica:&lt;br&gt;\n    &lt;input type=\"checkbox\" name=\"check1\"&gt;Fútbol\n    &lt;br&gt;\n    &lt;input type=\"checkbox\" name=\"check2\"&gt;Basquet\n    &lt;br&gt;\n    &lt;input type=\"checkbox\" name=\"check3\"&gt;Tenis\n    &lt;br&gt;\n    &lt;input type=\"checkbox\" name=\"check4\"&gt;Voley\n    &lt;br&gt;\n    &lt;input type=\"submit\" value=\"confirmar\"&gt;\n  &lt;/form&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;</pre>\nEjecutar ejemplo \n<pre>&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n\n  &lt;?php\n\n  \\$cant = 0;\n  if (isset(\\$_REQUEST['check1'])) {\n    \\$cant++;\n  }\n  if (isset(\\$_REQUEST['check2'])) {\n    \\$cant++;\n  }\n  if (isset(\\$_REQUEST['check3'])) {\n    \\$cant++;\n  }\n  if (isset(\\$_REQUEST['check4'])) {\n    \\$cant++;\n  }\n  echo \\$_REQUEST['nombre'];\n  echo \" practica \\$cant deportes.\"\n  ?&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;</pre>\n</div>"
    },
    {
        "title": "12 - FORMULARIO (control select)",
        "subtitle": "Veamos ahora como podemos rescatar desde PHP el elemento ...",
        "content": "<div>\n<p>Veamos ahora como podemos rescatar desde PHP el elemento seleccionado de un control HTML de tipo select.</p>\n<p>Implementar un formulario que solicite la carga de dos enteros, uno en cada \"text\".<br> \nDisponer un control de tipo select que nos permita seleccionar si queremos sumar o restar los dos valores ingresados:</p>\n<p class=\"titulopagina\">pagina1.html</p>\n<pre class=\"recuadroborde\">&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n  &lt;form action=\"pagina2.php\" method=\"post\"&gt;\n    Ingrese primer valor:\n    &lt;input type=\"text\" name=\"valor1\"&gt;\n    &lt;br&gt;\n    Ingrese segundo valor:\n    &lt;input type=\"text\" name=\"valor2\"&gt;\n    &lt;br&gt;\n    &lt;select name=\"operacion\"&gt;\n      &lt;option value=\"suma\"&gt;sumar&lt;/option&gt;\n      &lt;option value=\"resta\"&gt;restar&lt;/option&gt;\n    &lt;/select&gt;\n    &lt;br&gt;\n    &lt;input type=\"submit\" name=\"operar\"&gt;\n  &lt;/form&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;\n</pre>\n\n<p>Lo nuevo que aparece en este formulario es el control de tipo select.</p>\n<pre>    &lt;select name=\"operacion\"&gt;\n      &lt;option value=\"suma\"&gt;sumar&lt;/option&gt;\n      &lt;option value=\"resta\"&gt;restar&lt;/option&gt;\n    &lt;/select&gt;\n</pre>\n\n<p>Cada opción tiene un valor (value). El seleccionado es el que se enviará a la página que procesa el formulario. El texto que aparece dentro del control es el que disponemos entre las marcas option.</p>\n\n<p>Ahora la página que captura los datos ingresados en el formulario es:</p>\n<p class=\"titulopagina\">pagina2.php</p>\n<pre class=\"recuadroborde\">&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n  &lt;?php\n  if (\\$_REQUEST['operacion'] == \"suma\") {\n    \\$suma = \\$_REQUEST['valor1'] + \\$_REQUEST['valor2'];\n    echo \"La suma es:\" . \\$suma;\n  } else {\n    if (\\$_REQUEST['operacion'] == \"resta\") {\n      \\$resta = \\$_REQUEST['valor1'] - \\$_REQUEST['valor2'];\n      echo \"La resta es:\" . \\$resta;\n    }\n  }\n  ?&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;\n</pre>\n\n<p>El vector asociativo \\$_REQUEST almacena en la componente del control select el valor de la opción seleccionada.</p>\n<p>Con una serie de if verificamos el valor seleccionado:</p>\n<pre>  if (\\$_REQUEST['operacion'] == \"suma\") {\n    \\$suma = \\$_REQUEST['valor1'] + \\$_REQUEST['valor2'];\n    echo \"La suma es:\" . \\$suma;\n  } else {\n    if (\\$_REQUEST['operacion'] == \"resta\") {\n      \\$resta = \\$_REQUEST['valor1'] - \\$_REQUEST['valor2'];\n      echo \"La resta es:\" . \\$resta;\n    }\n  }\n</pre>\n<p>Sólo se puede seleccionar un elemento de un control select (más adelante veremos como seleccionar varios elementos en forma simultáneo)</p>\n<h2>Problema resuelto.</h2>\n<p>Copiar el contenido de este cuadro de texto al VS Code y almacenarlo en la carpeta c:/xampp/htdocs con un nombre con extensión php.<br>\n  luego abrir el navegador (Chrome, FireFox, IExplorer etc.) y en la barra de direcciones tipear:<br> http://localhost/pagina1.php (o el nombre del\narchivo que le dió)  </p>\n<pre>&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n  &lt;form action=\"pagina2.php\" method=\"post\"&gt;\n    Ingrese primer valor:\n    &lt;input type=\"text\" name=\"valor1\"&gt;\n    &lt;br&gt;\n    Ingrese segundo valor:\n    &lt;input type=\"text\" name=\"valor2\"&gt;\n    &lt;br&gt;\n    &lt;select name=\"operacion\"&gt;\n      &lt;option value=\"suma\"&gt;sumar&lt;/option&gt;\n      &lt;option value=\"resta\"&gt;restar&lt;/option&gt;\n    &lt;/select&gt;\n    &lt;br&gt;\n    &lt;input type=\"submit\" name=\"operar\"&gt;\n  &lt;/form&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;</pre>\n\nEjecutar ejemplo \n\n<pre>&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n  &lt;?php\n  if (\\$_REQUEST['operacion'] == \"suma\") {\n    \\$suma = \\$_REQUEST['valor1'] + \\$_REQUEST['valor2'];\n    echo \"La suma es:\" . \\$suma;\n  } else {\n    if (\\$_REQUEST['operacion'] == \"resta\") {\n      \\$resta = \\$_REQUEST['valor1'] - \\$_REQUEST['valor2'];\n      echo \"La resta es:\" . \\$resta;\n    }\n  }\n  ?&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;</pre>\n<h2>Problema propuesto.</h2>\n<p>Confeccionar un formulario que solicite el ingreso del nombre de una persona y un control select (en este último permitir la selección de los ingresos mensuales de la persona: 1-1000,1001-3000,&gt;3000)<br>\nEn la página que procesa el formulario mostrar un mensaje si debe pagar impuestos a las ganancias (si supera 3000)</p>\nSolución\n<pre class=\"programafuente\" name=\"programa\" rows=\"15\" cols=\"110\" wrap=\"off\" readonly=\"\">&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n\n  &lt;form method=\"post\" action=\"pagina2.php\"&gt;\n    Ingrese el nombre:\n    &lt;input type=\"text\" name=\"nombre\"&gt;\n    &lt;br&gt;\n    Seleccione en que rango se ubica sus ingresos:\n    &lt;select name=\"ingresos\"&gt;\n      &lt;option value=\"1\"&gt;1-1000&lt;/option&gt;\n      &lt;option value=\"2\"&gt;1001-3000&lt;/option&gt;\n      &lt;option value=\"3\"&gt;&gt;3000&lt;/option&gt;\n    &lt;/select&gt;\n\n    &lt;br&gt;\n    &lt;input type=\"submit\" value=\"confirmar\"&gt;\n  &lt;/form&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;</pre>\nEjecutar ejemplo \n<pre>&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n\n  &lt;?php\n  echo \\$_REQUEST['nombre'];\n  if (\\$_REQUEST['ingresos'] == 3) {\n    echo \" debe pagar impuestos.\";\n  } else {\n    echo \" no debe pagar impuestos a las ganancias.\";\n  }\n\n  ?&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;</pre>\n</div>"
    },
    {
        "title": "13 - FORMULARIO (control textarea)",
        "subtitle": "El control HTML \"textarea\" se diferencia del \"text\" en que ...",
        "content": "<div>\n<p>El control HTML \"textarea\" se diferencia del \"text\" en que permite el ingreso de muchas líneas.</p>\n<h3>Problema</h3>\n<p>Implementar un formulario web para ingresar el nombre de una persona en un control text y mediante un control de tipo textarea se permita el ingreso del curriculum de dicha persona.</p>\n<p class=\"titulopagina\">pagina1.html</p>\n<pre class=\"recuadroborde\">&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n  &lt;form action=\"pagina2.php\" method=\"post\"&gt;\n    Ingrese nombre:&lt;input type=\"text\" name=\"nombre\"&gt;&lt;br&gt;\n    Ingrese su curriculum:&lt;br&gt;\n    &lt;textarea name=\"curriculum\"&gt;&lt;/textarea&gt;\n    &lt;br&gt;\n    &lt;input type=\"submit\" value=\"Confirmar\"&gt;\n  &lt;/form&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;\n</pre>\n\n<p>La sintaxis de este control es bastante diferente a la del control text:</p>\n<pre>  &lt;textarea name=\"curriculum\"&gt;&lt;/textarea&gt; \n</pre>\n<p>Si queremos que aparezca inicializado con texto debemos disponerlo en:</p>\n<pre>  &lt;textarea name=\"curriculum\"&gt;Hola Mundo&lt;/textarea&gt; \n</pre>\n\n<p>La página PHP que procesa los dos datos ingresados en el formulario es:</p>\n<pre class=\"recuadroborde\">&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n  &lt;?php\n  echo \"El nombre ingresado:\" . \\$_REQUEST['nombre'];\n  echo \"&lt;br&gt;\";\n  echo \"El curriculum:\" . \\$_REQUEST['curriculum'];\n  ?&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;\n</pre>\n\n<p>El dato ingresado en el textarea se rescata en forma idéntica que los controles text, es decir mediante el vector asociativo \\$_REQUEST:</p>\n<pre>  echo \"El curriculum:\" . \\$_REQUEST['curriculum'];\n</pre>\n<h2>Problema resuelto.</h2>\n<p>Copiar el contenido de este cuadro de texto al VS Code y almacenarlo en la carpeta c:/xampp/htdocs con un nombre con extensión php.<br>\n  luego abrir el navegador (Chrome, FireFox, IExplorer etc.) y en la barra de direcciones tipear:<br> http://localhost/pagina1.php (o el nombre del\narchivo que le dió)  </p>\n<pre class=\"programafuente\" name=\"programa\" rows=\"15\" cols=\"110\" wrap=\"off\" readonly=\"\">&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n  &lt;form action=\"pagina2.php\" method=\"post\"&gt;\n    Ingrese nombre:&lt;input type=\"text\" name=\"nombre\"&gt;&lt;br&gt;\n    Ingrese su curriculum:&lt;br&gt;\n    &lt;textarea name=\"curriculum\"&gt;&lt;/textarea&gt;\n    &lt;br&gt;\n    &lt;input type=\"submit\" value=\"Confirmar\"&gt;\n  &lt;/form&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;</pre>\nEjecutar ejemplo \n<pre class=\"programafuente\" name=\"programa2\" rows=\"15\" cols=\"110\" wrap=\"off\" readonly=\"\">&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n  &lt;?php\n  echo \"El nombre ingresado:\" . \\$_REQUEST['nombre'];\n  echo \"&lt;br&gt;\";\n  echo \"El curriculum:\" . \\$_REQUEST['curriculum'];\n  ?&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;</pre>\n<h2>Problema propuesto.</h2>\n<p>Confeccionar una página que muestre un contrato dentro de un textarea, disponer puntos suspensivos donde el operador debe ingresar un texto. La página que procesa el formulario sólo debe mostrar el contrato con las modificaciones que hizo el operador.</p>\n<p>Ej. de un contrato puede ser:</p>\n<pre>En la ciudad de [........], se acuerda entre la Empresa [..........] \nrepresentada por el Sr. [..............] en su carácter de Apoderado,\ncon domicilio en la calle [..............] y el Sr. [..............],\nfuturo empleado con domicilio en [..............], celebrar el presente \ncontrato a Plazo Fijo, de acuerdo a la normativa vigente de los\nartículos 90,92,93,94, 95 y concordantes de la Ley de Contrato de Trabajo N° 20.744.\n</pre>\nSolución\n<pre class=\"programafuente\" name=\"programa\" rows=\"15\" cols=\"110\" wrap=\"off\" readonly=\"\">&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n  &lt;form action=\"pagina2.php\" method=\"post\"&gt;\n    Completar contrato:&lt;br&gt;\n    &lt;textarea name=\"contrato\" rows=\"8\" cols=\"80\"&gt;\nEn la ciudad de [........], se acuerda entre la Empresa [..........] representada por el Sr. [..............] en su carácter de Apoderado, con domicilio en la calle [..............] y el Sr. [..............], futuro empleado con domicilio en [..............], celebrar el presente contrato a Plazo Fijo, de acuerdo a la normativa vigente de los artículos 90,92,93,94, 95 y concordantes de la Ley de Contrato de Trabajo N° 20.744.\n&lt;/textarea&gt;\n    &lt;br&gt;\n    &lt;input type=\"submit\" value=\"Confirmar\"&gt;\n  &lt;/form&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;</pre>\nEjecutar ejemplo \n<pre class=\"programafuente\" name=\"programa2\" rows=\"15\" cols=\"110\" wrap=\"off\" readonly=\"\">&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n\n  &lt;?php\n  echo \\$_REQUEST['contrato'];\n\n  ?&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;</pre>\n\n</div>"
    },
    {
        "title": "14 - Vectores (tradicionales)",
        "subtitle": "Un Array es una colección de valores. Los array pueden ...",
        "content": "<div>\n<p>Un Array es una colección de valores. Los array pueden ser unidimensionales (vectores), bidimensionales (matrices) y multidimensionales (más de dos dimensiones)</p>\n<p>Los arrays se utilizan ampliamente en el lenguaje PHP.</p>\n<p>Se utiliza el delimitador [] para acceder a los diferentes elementos del vector.</p>\n\n<p>Se lo puede crear al vuelo, sin tener que declararlo:</p>\n<pre>\\$dias[0]=31;\n\\$dias[1]=28;\n</pre>\n<p>Luego de estas dos líneas, tenemos creado un vector de dos elementos, a los cuales accedemos por un subíndice.</p>\n<pre>echo \\$dias[0];\t//31\necho \\$dias[1];\t//28\n</pre>\n<p>El vector, como podemos ver, puede ir creciendo en forma dinámica, es decir que si ahora hacemos:</p>\n<pre>\\$dias[2]=31;\n</pre>\n<p>el vector ahora pasa a tener 3 componentes.</p>\n<p>También podemos obviar el subíndice cuando asignamos los valores:</p>\n<pre>\\$dias[]=31;\n\\$dias[]=28;\n\\$dias[]=31;\n</pre>\n<p>Automáticamente comienza a numerarse desde cero.</p>\n\n<p>Si necesitamos conocer el tamaño del vector en cualquier momento podemos llamar a la función count.</p>\n<pre>echo count(\\$dias);\t//3\n</pre>\n\n<p>Si queremos imprimir todos los elementos en la página podemos hacer:</p>\n<pre class=\"recuadroborde\">&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n\n  &lt;?php\n  \\$nombres[] = \"juan\";\n  \\$nombres[] = \"pedro\";\n  \\$nombres[] = \"ana\";\n  for (\\$f = 0; \\$f &lt; count(\\$nombres); \\$f++) {\n    echo \\$nombres[\\$f];\n    echo \"&lt;br&gt;\";\n  }\n  ?&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;\n</pre>\n\n<p>La función sizeof(&lt;nombre del vector&gt;) es equivalente a count</p>\n<p>Otra forma de inicializar un vector es definirlo e inicializarlo simultáneamente:</p>\n<pre>\\$edades=array(\"menores\",\"jovenes\",\"adultos\");\n</pre>\n<p>Estamos definiendo el vector edades con tres componentes, numeradas automáticamente de cero a dos.</p>\n\n<h3>Acotaciones</h3>\n<p>Cuando tenemos que recorrer en forma completa un vector en PHP es muy común utilizar la estructura 'foreach'. Veamos el mismo\nejemplo anterior para recorrer el vector \\$nombres:</p>\n<p class=\"titulopagina\">pagina1.php</p>\n<pre class=\"recuadroborde\">&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n\n  &lt;?php\n  \\$nombres[] = \"juan\";\n  \\$nombres[] = \"pedro\";\n  \\$nombres[] = \"ana\";\n  foreach (\\$nombres as \\$nombre) {\n    echo \\$nombre;\n    echo \"&lt;br&gt;\";\n  }\n  ?&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;\n</pre>\n<p>En cada repetición del 'foreach' la variable \\$nombre almacena una componente del vector \\$nombres, luego dentro del 'foreach' mostramos el contenido de la variable \\$nombre:</p>\n<pre>  foreach (\\$nombres as \\$nombre) {\n    echo \\$nombre;\n    echo \"&lt;br&gt;\";\n  }\n</pre>\n\n<h2>Problema resuelto.</h2>\n<p>Copiar el contenido de este cuadro de texto al VS Code y almacenarlo en la carpeta c:/xampp/htdocs con un nombre con extensión php.<br>\n  luego abrir el navegador (Chrome, FireFox, IExplorer etc.) y en la barra de direcciones tipear:<br> http://localhost/pagina1.php (o el nombre del\narchivo que le dió)  </p>\n<pre class=\"programafuente\" name=\"programa\" rows=\"15\" cols=\"110\" wrap=\"off\" readonly=\"\">&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n\n  &lt;?php\n  \\$nombres[] = \"juan\";\n  \\$nombres[] = \"pedro\";\n  \\$nombres[] = \"ana\";\n  for (\\$f = 0; \\$f &lt; count(\\$nombres); \\$f++) {\n    echo \\$nombres[\\$f];\n    echo \"&lt;br&gt;\";\n  }\n  ?&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;</pre>\n<h2>Problema propuesto.</h2>\n<p>Definir un vector con los nombres de los días de la semana. Luego imprimir el primero y el último elemento del vector.</p><form name=\"formulario\" action=\"\" target=\"ventanaForm\" onsubmit=\"abrirVentana()\" method=\"post\">\n\n<h3>Solución</h3>\n<pre class=\"programafuente\" name=\"programa\" rows=\"15\" cols=\"110\" wrap=\"off\" readonly=\"\">&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n\n  &lt;?php\n  \\$diaSemana[] = \"Lunes\";\n  \\$diaSemana[] = \"Martes\";\n  \\$diaSemana[] = \"Miércoles\";\n  \\$diaSemana[] = \"Jueves\";\n  \\$diaSemana[] = \"Viernes\";\n  \\$diaSemana[] = \"Sábado\";\n  \\$diaSemana[] = \"Domingo\";\n  echo \"Primer elemento:\" . \\$diaSemana[0];\n  echo \"&lt;br&gt;\";\n  echo \"Ultimo elemento:\" . \\$diaSemana[6];\n  ?&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;</pre>\n</div>"
    },
    {
        "title": "15 - Creación de un archivo de texto",
        "subtitle": "Una actividad fundamental es poder registrar información ...",
        "content": "<div>\n<p>Una actividad fundamental es poder registrar información en el servidor (no como hemos estado haciendo hasta el momento generando sólo una página con los datos cargados)</p>\n<p>Para la registración de datos en el servidor disponemos de dos herramientas que se complementan en muchos casos (archivos de texto y bases de datos)</p>\n<p>En este apartado veremos como crear un archivo de texto y añadir datos al mismo.</p>\n\n<p>Lo presentaremos al tema resolviendo un problema: Implementación de un libro de visitas.</p>\n<p>Para resolver este problema plantearemos dos páginas, un formulario para realizar la carga del nombre del visitante y sus comentarios (disponemos un objeto de tipo \"text\" y otro de tipo \"textarea\"):</p>\n<p class=\"titulopagina\">pagina1.html</p>\n<pre class=\"recuadroborde\">&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n  &lt;form action=\"pagina2.php\" method=\"post\"&gt;\n    Ingrese su nombre:\n    &lt;input type=\"text\" name=\"nombre\"&gt;\n    &lt;br&gt;\n    Comentarios:\n    &lt;br&gt;\n    &lt;textarea name=\"comentarios\" rows=\"10\" cols=\"40\"&gt;&lt;/textarea&gt;\n    &lt;br&gt;\n    &lt;input type=\"submit\" value=\"Registrar\"&gt;\n  &lt;/form&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;\n</pre>\n\n<p>Este formulario es similar a los planteados en problemas anteriores, sólo le hemos agregado al control textarea, las propiedades rows y cols que dimensionan el mismo en la pantalla:</p>\n<pre>    &lt;textarea name=\"comentarios\" rows=\"10\" cols=\"40\"&gt;&lt;/textarea&gt;\n</pre>\n\n<p>Veamos ahora la página (pagina2.php) que graba los datos cargados en el formulario en un archivo:</p>\n<pre class=\"recuadroborde\">&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n  &lt;?php\n  \\$ar = fopen(\"datos.txt\", \"a\") or\n    die(\"Problemas en la creacion\");\n  fputs(\\$ar, \\$_REQUEST['nombre']);\n  fputs(\\$ar, \"\\n\");\n  fputs(\\$ar, \\$_REQUEST['comentarios']);\n  fputs(\\$ar, \"\\n\");\n  fputs(\\$ar, \"--------------------------------------------------------\");\n  fputs(\\$ar, \"\\n\");\n  fclose(\\$ar);\n  echo \"Los datos se cargaron correctamente.\";\n  ?&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;</pre>\n\n<p>En primer lugar creamos o abrimos el archivo de texto \"datos.txt\". El segundo parámetro de la función fopen indica la forma de apertura de archivo \"a\" (lo crea o si ya existe el archivo lo abre para añadir datos al final), \"w\" (crea el archivo de texto, si existe borra su contenido) y la última forma de apertura del archivo es \"r\" (abre el archivo para su lectura)</p>\n<p>Como en este problema nos interesa que el archivo vaya creciendo con los datos que aportan los visitantes al sitio lo abrimos para añadir, parámetro \"a\".</p>\n<p>La función fopen retorna una referencia al archivo y la almacenamos en una variable llamada \\$ar.</p>\n<p>Si el archivo no se puede abrir, se ejecuta la instrucción que se encuentra luego del operador \"or\" en nuestro caso llamamos a la función die que finaliza la ejecución del programa PHP mostrando como mensaje el texto que le pasamos a dicha función (por ejemplo si el disco duro del servidor está lleno no se podrá crear el archivo de texto)</p>\n\n<pre>  \\$ar = fopen(\"datos.txt\", \"a\") or\n    die(\"Problemas en la creacion\");\n</pre>\n\n<p>Para la grabación de datos utilizamos la función fputs que tiene dos parámetros: la referencia al archivo donde grabamos y el string a grabar.</p>\n<pre>  fputs(\\$ar, \\$_REQUEST['nombre']);\n  fputs(\\$ar, \"\\n\");\n</pre>\n\n<p>Para el salto de línea en el archivo de texto, usamos los caracteres \\n.De esta forma cuando leamos el archivo de texto lo haremos línea a línea.</p>\n<p>Cuando dejamos de trabajar con el archivo llamamos a la función fclose.</p>\n\n<p>Hay que tener muy presente que el archivo se almacena en el servidor y no en la máguina de la persona que está navegando. Si nos dirigimos a la carpeta c:/xampp/htdocs encontraremos el archivo \"datos.txt\", tenga en cuenta que está en la máquina donde se ejecutó el script de PHP (normalmente en un servidor web). Luego veremos como leer el contenido del archivo y mostrarlo en otra página del sitio (En nuestro caso como utilizamos el equipo como cliente/servidor el archivo datos.txt se crea en la misma carpeta donde se alojan nuestras páginas php)</p>\n\n\n<br>\n<br>\n\n<h2>Problema resuelto.</h2>\n<p>Copiar el contenido de este cuadro de texto al VS Code y almacenarlo en la carpeta c:/xampp/htdocs con un nombre con extensión php.<br>\n  luego abrir el navegador (Chrome, FireFox, IExplorer etc.) y en la barra de direcciones tipear:<br> http://localhost/pagina1.php (o el nombre del\narchivo que le dió)  </p>\n<pre class=\"programafuente\" name=\"programa\" rows=\"15\" cols=\"110\" wrap=\"off\" readonly=\"\">&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n  &lt;form action=\"pagina2.php\" method=\"post\"&gt;\n    Ingrese su nombre:\n    &lt;input type=\"text\" name=\"nombre\"&gt;\n    &lt;br&gt;\n    Comentarios:\n    &lt;br&gt;\n    &lt;textarea name=\"comentarios\" rows=\"10\" cols=\"40\"&gt;&lt;/textarea&gt;\n    &lt;br&gt;\n    &lt;input type=\"submit\" value=\"Registrar\"&gt;\n  &lt;/form&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;</pre>\n\n<h3>Ejecutar ejemplo</h3> \n<pre class=\"programafuente\" name=\"programa2\" rows=\"15\" cols=\"110\" wrap=\"off\" readonly=\"\">&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n  &lt;?php\n  \\$ar = fopen(\"datos.txt\", \"a\") or\n    die(\"Problemas en la creacion\");\n  fputs(\\$ar, \\$_REQUEST['nombre']);\n  fputs(\\$ar, \"\\n\");\n  fputs(\\$ar, \\$_REQUEST['comentarios']);\n  fputs(\\$ar, \"\\n\");\n  fputs(\\$ar, \"--------------------------------------------------------\");\n  fputs(\\$ar, \"\\n\");\n  fclose(\\$ar);\n  echo \"Los datos se cargaron correctamente.\";\n  ?&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;</pre>\n<h2>Problema propuesto.</h2>\n<p>Confeccionar un programa en PHP que permita hacer el pedido de pizzas via internet.</p>\nEl formulario debe ser:<br>\nNombre:[..............]<br>\nDireccion:[...................]<br>\nJamon y queso:[x]<br>\nCantidad[...]<br>\n<br>\nNapolitana:[x]<br>\nCantidad[...]<br>\n<br>\nMuzzarella:[x]<br>\nCantidad[...]<br>\n<br>\n[Confirmar]<br>\n<br>\n<p>Para el ingreso del nombre, dirección y cantidad de pizzas de cada tipo disponer objetos de la clase \"text\".</p>\n<p>Disponer tres objetos de tipo \"checkbox\" para seleccionar los tipos de pizzas.<br>\nPor último disponer un botón para el envío de datos: \"submit\".</p>\n<p>Grabar en un archivo de texto llamado \"pedidos.txt\" cada pedido, separados por una línea de puntos entre cada pedido.</p>\n<h3>Solución</h3>\n<pre class=\"programafuente\" name=\"programa\" rows=\"15\" cols=\"110\" wrap=\"off\" readonly=\"\">&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n\n  &lt;form method=\"post\" action=\"pagina2.php\"&gt;\n    Nombre:\n    &lt;input type=\"text\" name=\"nombre\" size=\"30\"&gt;\n    &lt;br&gt;\n    Dirección:\n    &lt;input type=\"text\" name=\"direccion\" size=\"40\"&gt;\n    &lt;br&gt;\n    Jamon y Queso:\n    &lt;input type=\"checkbox\" name=\"jamonqueso\"&gt;\n    &lt;input type=\"text\" name=\"cantjamonqueso\" size=\"3\"&gt;\n    &lt;br&gt;\n    Napolitana:\n    &lt;input type=\"checkbox\" name=\"napolitana\"&gt;\n    &lt;input type=\"text\" name=\"cantnapolitana\" size=\"3\"&gt;\n    &lt;br&gt;\n    Muzzarella:\n    &lt;input type=\"checkbox\" name=\"muzzarella\"&gt;\n    &lt;input type=\"text\" name=\"cantmuzzarella\" size=\"3\"&gt;\n    &lt;br&gt;\n    &lt;input type=\"submit\" value=\"Confirmar\"&gt;\n  &lt;/form&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;</pre>\n<h3>Ejecutar ejemplo</h3> \n<pre class=\"programafuente\" name=\"programa2\" rows=\"15\" cols=\"110\" wrap=\"off\" readonly=\"\">&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n\n  &lt;?php\n  \\$ar = fopen(\"datos.txt\", \"a\") or\n    die(\"Problemas en la creacion\");\n  fputs(\\$ar, \"Nombre:\");\n  fputs(\\$ar, \\$_REQUEST['nombre']);\n  fputs(\\$ar, \"\\n\");\n  fputs(\\$ar, \"Dirección:\");\n  fputs(\\$ar, \\$_REQUEST['direccion']);\n  fputs(\\$ar, \"\\n\");\n  if (isset(\\$_REQUEST['jamonqueso'])) {\n    fputs(\\$ar, \"Cantidad de Jamón y Queso:\");\n    fputs(\\$ar, \\$_REQUEST['cantjamonqueso']);\n    fputs(\\$ar, \"\\n\");\n  }\n  if (isset(\\$_REQUEST['napolitana'])) {\n    fputs(\\$ar, \"Cantidad de Napolitana:\");\n    fputs(\\$ar, \\$_REQUEST['cantnapolitana']);\n    fputs(\\$ar, \"\\n\");\n  }\n  if (isset(\\$_REQUEST['muzzarella'])) {\n    fputs(\\$ar, \"Cantidad de Muzzarella:\");\n    fputs(\\$ar, \\$_REQUEST['cantmuzzarella']);\n    fputs(\\$ar, \"\\n\");\n  }\n\n  fputs(\\$ar, \"--------------------------------------------------------\");\n  fputs(\\$ar, \"\\n\");\n  fclose(\\$ar);\n  echo \"El pedido se cargó correctamente.\";\n  ?&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;</pre>\n</div>"
    },
    {
        "title": "16 - Lectura de un archivo de texto",
        "subtitle": "Para la lectura de un archivo de texto contamos ...",
        "content": "<div>\n<p>Para la lectura de un archivo de texto contamos con la función fgets. Además debemos abrir el archivo para lectura.</p>\n<p>La apertura para leer:</p>\n<pre>  \\$ar=fopen(\"datos.txt\",\"r\") or\n    die(\"No se pudo abrir el archivo\");\n</pre>\n<p>Para leer:</p>\n<pre>    \\$linea=fgets(\\$ar);\n</pre>\n\n<p>Veamos como mostrar por pantalla el contenido del archivo \"datos.txt\" creado en el punto anterior:</p>\n<pre class=\"recuadroborde\">&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n  &lt;?php\n  \\$ar = fopen(\"datos.txt\", \"r\") or\n    die(\"No se pudo abrir el archivo\");\n  while (!feof(\\$ar)) {\n    \\$linea = fgets(\\$ar);\n    \\$lineasalto = nl2br(\\$linea);\n    echo \\$lineasalto;\n  }\n  fclose(\\$ar);\n  ?&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;\n</pre>\n\n<p>Lo primero que debemos identificar es la forma de apertura del archivo:</p>\n<pre>  \\$ar = fopen(\"datos.txt\", \"r\") or\n    die(\"No se pudo abrir el archivo\");\n</pre>\n<p>El segundo parámetro de fopen es \"r\" es decir read (apertura para lectura), si el archivo no existe por ejemplo se ejecuta la función die que finaliza el programa mostrando el string correspondiente.</p>\n<p>La función feof retorna true si se ha llegado al final del archivo en caso contrario retorna false. Para que se impriman todas las líneas del archivo se plantea una estructura repetitiva que se ejecuta mientras no se llegue al final de archivo (el operador lógico not en PHP es el caracter !):</p>\n<pre>  while (!feof(\\$ar)) {\n</pre>\n<p>Dentro de la estructura repetitiva leemos una línea completa del archivo de texto con la función fgets:</p>\n<pre>    \\$linea = fgets(\\$ar);\n</pre>\n<p>La variable \\$linea contiene una línea completa del archivo de texto, inclusive el salto de línea (\\n)</p>\n<p>Como el navegador no hace un salto de línea con este caracter, debemos convertir dicho caracter al elemento &lt;br&gt; propia de HTML. La función que realiza esta actividad se llama nl2br (new line to br)</p>\n<p>El resultado se almacena en una nueva variable que es la que realmente imprimimos:</p>\n<pre>    \\$lineasalto = nl2br(\\$linea);\n    echo \\$lineasalto;\n</pre>\n\n<br>\n<br>\n\n<h2>Problema resuelto.</h2>\n<p>Copiar el contenido de este cuadro de texto al VS Code y almacenarlo en la carpeta c:/xampp/htdocs con un nombre con extensión php.<br>\n  luego abrir el navegador (Chrome, FireFox, IExplorer etc.) y en la barra de direcciones tipear:<br> http://localhost/pagina1.php (o el nombre del\narchivo que le dió)  </p>\n<pre class=\"programafuente\" name=\"programa\" rows=\"15\" cols=\"110\" wrap=\"off\" readonly=\"\">&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n  &lt;?php\n  \\$ar = fopen(\"datos.txt\", \"r\") or\n    die(\"No se pudo abrir el archivo\");\n  while (!feof(\\$ar)) {\n    \\$linea = fgets(\\$ar);\n    \\$lineasalto = nl2br(\\$linea);\n    echo \\$lineasalto;\n  }\n  fclose(\\$ar);\n  ?&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;</pre>\n<h3>Ejecutar ejemplo</h3> \n<h2>Problema propuesto.</h2>\n<p>Confeccionar un programa que muestre el archivo de pedido de pizzas via internet del punto anterior.</p>\n<p>Recordemos que creamos el archivo de texto llamado pedidos.txt (grabar la página php en el mismo directorio donde se encuentra el archivo pedidos.txt)</p>\n<h3>Solución</h3>\n<pre class=\"programafuente\" name=\"programa\" rows=\"15\" cols=\"110\" wrap=\"off\" readonly=\"\">&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n\n  &lt;?php\n  \\$ar = fopen(\"pedidos.txt\", \"r\") or\n    die(\"No se pudo abrir el archivo\");\n  while (!feof(\\$ar)) {\n    \\$linea = fgets(\\$ar);\n    \\$lineasalto = nl2br(\\$linea);\n    echo \\$lineasalto;\n  }\n  fclose(\\$ar);\n  ?&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;</pre>\n</div>"
    },
    {
        "title": "17 - Vectores (asociativos)",
        "subtitle": "Este tipo de vectores no es común a otros lenguajes ...",
        "content": "<div>\n<p>Este tipo de vectores no es común a otros lenguajes, pero en PHP son de uso indispensable en distintas situaciones (ya lo empleamos cuando recuperamos información de un formulario accediendo al vector \\$_REQUEST que crea PHP en forma automática, cuando accedamos a datos de una base de datos también lo emplearemos etc.)</p>\n<p>Un vector asociativo permite acceder a un elemento del vector por medio de un subíndice de tipo string.</p>\n\n<p>Inicialmente uno piensa que esto nos complica las cosas, como veremos más adelante la realidad nos demuestra lo contrario.</p>\n\n<p>Como ejemplo, consideremos que deseamos guardar en un vector el DNI, nombre y dirección de una persona. Empleando un vector con subíndice entero la solución sería:</p>\n<pre>&lt;?php\n\\$registro[] = \"20456322\";\n\\$registro[] = \"Martinez Pablo\";\n\\$registro[] = \"Colon 134\";\n?&gt;\n</pre>\n<p>De esta forma debemos recordar que cuando deseamos mostrar el nombre de la persona debemos acceder al subíndice 1. Esto es sencillo si tenemos un vector con tres elementos, pero que sucede si debemos almacenar 20 datos relacionados en un vector.</p>\n\n<p>Un vector asociativo se define de la siguiente forma:</p>\n<pre>&lt;?php\n\\$registro['dni'] = \"20456322\";\n\\$registro['nombre'] = \"Martinez Pablo\";\n\\$registro['direccion'] = \"Colon 134\";\necho \\$registro['nombre'];\n?&gt;\n</pre>\n<p>Ahora vemos que para imprimir el nombre de la persona no debemos recordar una posición dentro de un vector sino un nombre de clave. Esto se hace indispensable cuando administramos un conjunto de datos grandes.</p>\n<p>En un vector asociativo toda componente está asociada a una clave.</p>\n\n<p>Otras formas de crear un vector asociativo:</p>\n<pre>&lt;?php\n\\$registro = array(\n  'dni' =&gt; '20456322',\n  'nombre' =&gt; 'Martinez Pablo',\n  'direccion' =&gt; 'Colon 134'\n);\necho \\$registro['dni'];\n?&gt;\n</pre>\n\n\n<h3>Acotaciones</h3>\n<p>Cuando tenemos que recorrer en forma completa un vector asociativo en PHP podemos utilizar la estructura 'foreach'. Veamos un ejemplo:</p>\n<pre class=\"recuadroborde\">&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n\n  &lt;?php\n  \\$articulo = array(\n    'codigo' =&gt; 1,\n    'descripcion' =&gt; 'manzanas',\n    'precio' =&gt; 30.25\n  );\n\n  foreach (\\$articulo as \\$clave =&gt; \\$valor) {\n    echo 'Para la clave :' . \\$clave . \" almacena el valor: \" . \\$valor;\n    echo \"&lt;br&gt;\";\n  }\n  ?&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;\n</pre>\n<p>En cada repetición del 'foreach' la variable \\$clave almacena el subíndice del vector y la variable \\$valor contiene el valor de la componente del vector:</p>\n<pre>  foreach (\\$articulo as \\$clave =&gt; \\$valor) {\n    echo 'Para la clave :' . \\$clave . \" almacena el valor: \" . \\$valor;\n    echo \"&lt;br&gt;\";\n  }\n</pre>\n<p>Luego se muestra al ejecutar la aplicación:</p>\n<pre>Para la clave :codigo almacena el valor: 1\nPara la clave :descripcion almacena el valor: manzanas\nPara la clave :precio almacena el valor: 30.25\n</pre>\n\n<p>Podemos recorrer el vector asociativo \\$_REQUEST mediante un foreach e imprimir tanto la clave como el valor.<br>\n</p><p>Desarrollaremos una aplicación que solicite la carga de 5 números en un formulario HTML y al presionar un botón se calcule la suma en el servidor.</p>\n<pre class=\"recuadroborde\">&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n  &lt;form action=\"pagina2.php\" method=\"post\"&gt;\n    Ingrese primer valor:\n    &lt;input type=\"text\" name=\"valor1\"&gt;\n    &lt;br&gt;\n    Ingrese segundo valor:\n    &lt;input type=\"text\" name=\"valor2\"&gt;\n    &lt;br&gt;\n    Ingrese tercer valor:\n    &lt;input type=\"text\" name=\"valor3\"&gt;\n    &lt;br&gt;\n    Ingrese cuarto valor:\n    &lt;input type=\"text\" name=\"valor4\"&gt;\n    &lt;br&gt;\n    Ingrese quinto valor:\n    &lt;input type=\"text\" name=\"valor5\"&gt;\n    &lt;br&gt;\n    &lt;input type=\"submit\"&gt;\n  &lt;/form&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;\n</pre>\n<p>Es importante notar que al input de tipo 'submit' no le definimos la propiedad 'name', con el objetivo que no se cargue en el vector asociativo '\\$_REQUEST'.</p>\n<p>Ahora la página que suma todos los valores ingresados es:</p>\n<pre class=\"recuadroborde\">&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n  &lt;?php\n  \\$suma = 0;\n  foreach (\\$_REQUEST as \\$clave =&gt; \\$valor) {\n    echo \"Valor: \" . \\$valor;\n    echo \"&lt;br&gt;\";\n    \\$suma = \\$suma + \\$valor;\n  }\n  echo \"La suma es: \" . \\$suma;\n  ?&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;\n</pre>\n<p>Como vemos podemos recorrer en forma completa los 5 elementos del vector '\\$_REQUEST' y acceder tanto a su valor como su clave:</p>\n<pre>  \\$suma = 0;\n  foreach (\\$_REQUEST as \\$clave =&gt; \\$valor) {\n    echo \"Valor: \" . \\$valor;\n    echo \"&lt;br&gt;\";\n    \\$suma = \\$suma + \\$valor;\n  }\n</pre>\n\n<p>Si solo queremos acceder a los valores del vector asociativo y no a sus claves, luego podemos codificar la sintaxis del foreach:</p>\n<pre>  foreach (\\$_REQUEST as \\$valor) {\n    echo \"Valor: \" . \\$valor;\n    echo \"&lt;br&gt;\";\n    \\$suma = \\$suma + \\$valor;\n  }\n\n</pre>\n<h2>Problema resuelto.</h2>\n<p>Copiar el contenido de este cuadro de texto al VS Code y almacenarlo en la carpeta c:/xampp/htdocs con un nombre con extensión php.<br>\n  luego abrir el navegador (Chrome, FireFox, IExplorer etc.) y en la barra de direcciones tipear:<br> http://localhost/pagina1.php (o el nombre del\narchivo que le dió)  </p>\n<pre class=\"programafuente\" name=\"programa\" rows=\"15\" cols=\"110\" wrap=\"off\" readonly=\"\">&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n\n  &lt;?php\n  //Almacenar en un vector asociativo la cantidad de dias que tiene\n  //cada mes del año. Luego accederlo por su nombre como subindice.\n  \\$mes['enero'] = 31;\n  \\$mes['febrero'] = 29;\n  \\$mes['marzo'] = 31;\n  \\$mes['abril'] = 30;\n  \\$mes['mayo'] = 31;\n  \\$mes['junio'] = 30;\n  \\$mes['julio'] = 31;\n  \\$mes['agosto'] = 31;\n  \\$mes['septiembre'] = 30;\n  \\$mes['octubre'] = 31;\n  \\$mes['noviembre'] = 30;\n  \\$mes['diciembre'] = 31;\n\n  echo \"Enero tiene:\" . \\$mes['enero'] . \"&lt;br&gt;\";\n  echo \"Agosto tiene:\" . \\$mes['agosto'] . \"&lt;br&gt;\";\n  echo \"Septiembre tiene:\" . \\$mes['septiembre'] . \"&lt;br&gt;\";\n\n  ?&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;</pre>\n<h3>Ejecutar ejemplo</h3> \n<h2>Problema propuesto.</h2>\n<p>Crear un vector asociativo que almacene las claves de acceso de 5 usuarios de un sistema. Acceder a cada componente por su nombre. Imprimir una componente del vector.</p><form name=\"formulario\" action=\"\" target=\"ventanaForm\" onsubmit=\"abrirVentana()\" method=\"post\">\n<h3>Solución</h3>\n<pre class=\"programafuente\" name=\"programa\" rows=\"15\" cols=\"110\" wrap=\"off\" readonly=\"\">&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n\n  &lt;?php\n  \\$clave['ana'] = \"abc123\";\n  \\$clave['luis'] = \"z67yui\";\n  \\$clave['carlos'] = \"sdf3sdf\";\n  \\$clave['laura'] = \"dsf3k32\";\n  \\$clave['pedro'] = \"axldds23\";\n\n  echo \"La clave de luis es:\" . \\$clave['luis'];\n  ?&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;</pre>\n</div>"
    },
    {
        "title": "18 - Funciones en PHP",
        "subtitle": "La sintaxis para la definición de una función en PHP es ...",
        "content": "<div>\n<p>La sintaxis para la definición de una función en PHP es:</p>\n<pre>function [nombre de la función]([parámetros])\n{\n  [algoritmo]\n}\n</pre>\n<p>Implementaremos una función que muestre un titulo centrado en patalla, y la llamaremos posteriormente dos veces:<br>\n</p><pre class=\"recuadroborde\">&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n\n  &lt;?php\n  function mostrartitulo(\\$men)\n  {\n    echo \"&lt;h1 style=\\\"text-align:center\\\"&gt;\";\n    echo \\$men;\n    echo \"&lt;/h1&gt;\";\n  }\n\n  mostrartitulo(\"Primer titulo\");\n  echo \"&lt;br&gt;\";\n  mostrartitulo(\"Segundo segundo\");\n\n  ?&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;\n</pre>\n<p>Para mostrar el titulo centrado utilizamos el elemento h1 de HTML y definimos un estilo centrado para el mismo.</p>\n<p>Si vemos la función, notamos que lo más trabajoso es definir todos los elementos HTML para crear el titulo. Es importante notar que en PHP para introducir las dobles comillas dentro de un string debemos anteceder el carácter '\\'; para introducir el carácter '\\' debemos escribir dos barras \\\\.</p>\n<p>Las llamadas a la función las hacemos por medio de su nombre y pasamos el único parámetro que requiere:</p>\n<pre>  mostrartitulo(\"Primer titulo\");\n  echo \"&lt;br&gt;\";\n  mostrartitulo(\"Segundo segundo\");\n</pre>\n\n<p>Las funciones nos permiten tener un programa más ordenado y facilitan la reutilización del código.</p>\n<p>Más adelante veremos como hacer archivos con rutinas comunes a muchas páginas.</p>\n\n<p>Una función puede retornar un dato, supongamos que necesitamos una función que nos retorne el promedio de dos valores, el código sería:</p>\n<pre class=\"recuadroborde\">&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n\n  &lt;?php\n  function retornarpromedio(\\$valor1, \\$valor2)\n  {\n    \\$pro = \\$valor1 / \\$valor2;\n    return \\$pro;\n  }\n\n  \\$v1 = 100;\n  \\$v2 = 50;\n  \\$p = retornarpromedio(\\$v1, \\$v2);\n  echo \\$p;\n  ?&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;\n</pre>\n\n<p>Cuando una función retorna un dato debemos emplear la palabra clave return seguida del valor que devuelve.</p>\n<p>En la llamada a la función el valor retornado se almacena generalmente en una variable:</p>\n<pre>  \\$p = retornarpromedio(\\$v1, \\$v2);\n</pre>\n\n<p>Si queremos que retorne más de un dato debemos emplear parámetros por referencia.</p>\n<p>Supongamos que necesitamos ahora que una función nos retorne el cuadrado y cubo de un número:</p>\n<pre class=\"recuadroborde\">&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n  &lt;?php\n  function cuadradocubo(\\$valor, &amp;\\$cuad, &amp;\\$cub)\n  {\n    \\$cuad = \\$valor * \\$valor;\n    \\$cub = \\$valor * \\$valor * \\$valor;\n  }\n  cuadradocubo(2, \\$c1, \\$c2);\n  echo \"El cuadrado de 2 es:\" . \\$c1 . \"&lt;br&gt;\";\n  echo \"El cubo de 2 es:\" . \\$c2;\n  ?&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;\n</pre>\n<p>Es decir, cuando le antecedemos el carácter ampersand al parámetro, es por referencia.</p>\n<p>El objetivo es asignarle cierto valor al parámetro y posteriormente el dato quedará almacenado en la variable que le pasamos a la función.</p>\n<pre>  function cuadradocubo(\\$valor, &amp;\\$cuad, &amp;\\$cub)\n  {\n    \\$cuad = \\$valor * \\$valor;\n    \\$cub = \\$valor * \\$valor * \\$valor;\n  }\n</pre>\n<p>El parámetro \\$cuad se almacena en la variable \\$c1 y el parámetro \\$cub se almacena en \\$c2. Es la forma más adecuada de modificar variables dentro de una función.</p>\n<br>\n<br>\n\n<h2>Problema resuelto.</h2>\n<p>Copiar el contenido de este cuadro de texto al VS Code y almacenarlo en la carpeta c:/xampp/htdocs con un nombre con extensión php.<br>\n  luego abrir el navegador (Chrome, FireFox, IExplorer etc.) y en la barra de direcciones tipear:<br> http://localhost/pagina1.php (o el nombre del\narchivo que le dió)  </p>\n<pre class=\"programafuente\" name=\"programa\" rows=\"15\" cols=\"110\" wrap=\"off\" readonly=\"\">&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n\n  &lt;?php\n  function mostrartitulo(\\$men)\n  {\n    echo \"&lt;h1 style=\\\"text-align:center\\\"&gt;\";\n    echo \\$men;\n    echo \"&lt;/h1&gt;\";\n  }\n\n  mostrartitulo(\"Primer titulo\");\n  echo \"&lt;br&gt;\";\n  mostrartitulo(\"Segundo segundo\");\n\n  ?&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;</pre>\n<h3>Ejecutar ejemplo</h3> \n<h2>Problema propuesto.</h2>\n<p>Confeccionar un formulario que solicite la carga del nombre de usuario y su clave en dos oportunidades. En la página que se procesan los datos del formulario implementar una función que imprima un mensaje si las dos claves ingresadas son distintas.</p><form name=\"formulario\" action=\"\" target=\"ventanaForm\" onsubmit=\"abrirVentana()\" method=\"post\">\n<h3>Solución</h3>\n<pre class=\"programafuente\" name=\"programa\" rows=\"15\" cols=\"110\" wrap=\"off\" readonly=\"\">&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n\n  &lt;form action=\"pagina2.php\" method=\"post\"&gt;\n    Ingrese nombre de usuario:\n    &lt;input type=\"text\" name=\"usuario\"&gt;\n    &lt;br&gt;\n    Ingrese su clave:\n    &lt;input type=\"password\" name=\"clave1\"&gt;\n    &lt;br&gt;\n    Repita la clave\n    &lt;input type=\"password\" name=\"clave2\"&gt;\n    &lt;br&gt;\n    &lt;input type=\"submit\" name=\"Confirmar\"&gt;\n  &lt;/form&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;</pre>\n<h3>Ejecutar ejemplo</h3> \n<pre class=\"programafuente\" name=\"programa2\" rows=\"15\" cols=\"110\" wrap=\"off\" readonly=\"\">&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n\n  &lt;?php\n\n  function verificarClaves(\\$cla1, \\$cla2)\n  {\n    if (\\$cla1 != \\$cla2)\n      echo \"Las claves ingresadas son distintas\";\n  }\n\n  verificarClaves(\\$_REQUEST['clave1'], \\$_REQUEST['clave2']);\n\n  ?&gt;\n  &lt;h2&gt;Se verificaron las claves ingresadas.&lt;/h2&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;</pre>\n</div>"
    },
    {
        "title": "19 - Base de datos (MySQL)",
        "subtitle": "Uno de los empleos principales de PHP es el acceso a una base de datos ...",
        "content": "<div>\n<p>Uno de los empleos principales de PHP es el acceso a una base de datos en el servidor. Las operaciones básicas se hacen empleando como lenguaje el SQL.</p>\n<p>PHP implementa distintas funciones según la base de datos a emplear. Existen funciones actualmente para acceder a las siguientes servidores de bases de datos:</p>\n<p>\n- MySQL<br>\n- MariaDB<br>\n- Microsoft SQL Server<br>\n- Oracle<br>\n- PostgreSQL<br>\n- SysBase<br>\n- FrontBase<br>\n- Informix<br>\n- InterBase<br>\n- Ingres<br>\n- mSQL<br>\n- dBase<br>\n- SQLlite<br>\n</p>\n<p>El más empleado en la actualidad en la web es el gestor de base de datos MySQL.</p>\n\n<p>Cuando instaló el entorno de XAMPP en un principio para trabajar con PHP, se instaló el MySQL o MariaDB.</p>\n\n<p>Para crear una base de datos el XAMPP instala también un programa codificado en PHP que nos permite interactuar con el MySQL o MariaDB.<br>\nEste programa se llama PHPMyAdmin (como veremos nos permite crear las bases de datos, tablas, índices, usuarios etc.)</p>\n\n<p>Para iniciar el PHPMyAdmin debemos presionar el botón \"Admin\" de MySQL en el panel de control de XAMPP:</p>\n\n<img src=\"asset:assets/img/19_foto013.jpg\" border=\"0\" alt=\"Arrancar el PHPMyAdmin con XAMPP\"><br>\n\n<p>Como podemos ver la interfaz del PHPMyAdmin es un programa que se ejecuta en la web:</p>\n<img src=\"asset:assets/img/19_foto014.jpg\" border=\"0\" alt=\"PHPMyAdmin\"><br>\n<p>Para crear una base de datos procedemos a seleccionar la pestaña \"Base de datos\" e ingresamos como nombre \"base1\" y presionamos el botón crear:<br>\n<img src=\"asset:assets/img/19_foto015.jpg\" border=\"0\" alt=\"PHPMyAdmin creación de una base de datos\"><br>\nLuego de crear la base de datos podemos ver que aparece en el lado izquierdo:<br>\n<img src=\"asset:assets/img/19_foto016.jpg\" border=\"0\" alt=\"PHPMyAdmin creación de una base de datos\"><br>\n</p><p>En el lado derecho de la pantalla podemos ahora ingresar el nombre de una tabla y la cantidad de campos que tendrá (crearemos una tabla llamada alumnos con 4 campos):<br>\n<img src=\"asset:assets/img/19_foto017.jpg\" border=\"0\" alt=\"PHPMyAdmin creación de una tabla\"><br>\n</p><p>La estructura de la tabla es:</p>\n<pre>  codigo int auto_increment primary key\n  nombre varchar(50)\n  mail varchar(70)\n  codigocurso int\n</pre>\n<p>En el PHPMyAdmin ingresamos:</p>\n<img src=\"asset:assets/img/19_foto018.jpg\" border=\"0\" alt=\"PHPMyAdmin creación de una tabla\"><br>\n<p>Es importante también hacer notar que en el campo codigo debemos marcar en Indice el valor \"primary\" y tildar la columna A_I (Auto_Increment):</p>\n<img src=\"asset:assets/img/19_foto019.jpg\" border=\"0\" alt=\"PHPMyAdmin creación de una tabla\"><br>\n<p>Por último presionamos el botón guardar y ya tenemos la tabla \"alumnos\" creada en la base de datos \"base1\":</p>\n<img src=\"asset:assets/img/19_foto020.jpg\" border=\"0\" alt=\"PHPMyAdmin creación de una tabla\"><br>\n\n\n<p>La tabla almacenará datos de alumnos que desarrollarán cursos de programación en PHP, ASP y JSP.</p> \n<p>El código del alumno es de tipo numérico (int) y al indicar que es auto_increment se generará automáticamente por el gestor de base de datos.<br>\nLos campos nombre y mail son de tipo varchar (podemos almacenar cualquier caracter) y por último el campo codigocurso representa el curso a tomar por el alumno (1=PHP, 2=ASP y 3=JSP)<br>\nEl campo clave de esta tabla es el código de alumno (es decir no podemos tener dos alumnos con el mismo código, no así el nombre del alumno que puede eventualmente repetirse)</p>\n<p>En los próximos conceptos comenzaremos a ver como desde PHP podemos comunicarnos con la base de datos \"base1\" y acceder a la tabla \"alumnos\" para ejecutar los comandos SQL más comunes como pueden ser: select, insert, delete, update etc.</p>\n</div>"
    },
    {
        "title": "20 - INSERT (Alta de registros en una tabla)",
        "subtitle": "20 - INSERT (Alta de registros en una tabla) ...",
        "content": "<div>\n<p>Luego de crear una base de datos y sus tablas (Vamos a trabajar con la base de datos ya creada: base1, que contiene la tabla alumnos), veremos como agregar registros.</p>\n\n<p>Para añadir datos en la tabla empleamos el comando SQL llamado insert.</p>\n<p>Necesitamos dos páginas para este proceso, una será el formulario de carga de datos y la siguiente será la que efectúe la inserción en la tabla.</p>\n<p>Formulario de carga de datos:</p>\n<pre class=\"recuadroborde\">&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n  &lt;h1&gt;Alta de Alumnos&lt;/h1&gt;\n  &lt;form action=\"pagina2.php\" method=\"post\"&gt;\n    Ingrese nombre:\n    &lt;input type=\"text\" name=\"nombre\"&gt;&lt;br&gt;\n    Ingrese mail:\n    &lt;input type=\"text\" name=\"mail\"&gt;&lt;br&gt;\n    Seleccione el curso:\n    &lt;select name=\"codigocurso\"&gt;\n      &lt;option value=\"1\"&gt;PHP&lt;/option&gt;\n      &lt;option value=\"2\"&gt;ASP&lt;/option&gt;\n      &lt;option value=\"3\"&gt;JSP&lt;/option&gt;\n    &lt;/select&gt;\n    &lt;br&gt;\n    &lt;input type=\"submit\" value=\"Registrar\"&gt;\n  &lt;/form&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;\n</pre>\n<p>El formulario es bastante similar a los que venimos desarrollando en puntos anteriores, tal vez lo distinto es cómo emplearemos el control \"select\" del curso a desarrollar:</p>\n<pre>    &lt;select name=\"codigocurso\"&gt;\n      &lt;option value=\"1\"&gt;PHP&lt;/option&gt;\n      &lt;option value=\"2\"&gt;ASP&lt;/option&gt;\n      &lt;option value=\"3\"&gt;JSP&lt;/option&gt;\n    &lt;/select&gt;\n</pre>\n<p>Cada opción tiene su respectivo valor (en este caso los números 1,2 y 3) y los textos a mostrar PHP, ASP y JSP. El dato que se envía a la otra página es el código de curso (esto debido a que definimos la propiedad value).</p>\n\n<p>Ahora veremos como realizar la registración de los datos cargados en el formulario, en la tabla alumnos de la base de datos base1:</p>\n<pre class=\"recuadroborde\">&lt;html&gt;\n&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n  &lt;?php\n  \\$conexion = mysqli_connect(\"localhost\", \"root\", \"\", \"base1\") or\n    die(\"Problemas con la conexión\");\n\n  mysqli_query(\\$conexion, \"insert into alumnos(nombre,mail,codigocurso) values \n                       ('\\$_REQUEST[nombre]','\\$_REQUEST[mail]',\\$_REQUEST[codigocurso])\")\n    or die(\"Problemas en el select\" . mysqli_error(\\$conexion));\n\n  mysqli_close(\\$conexion);\n\n  echo \"El alumno fue dado de alta.\";\n  ?&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;\n</pre>\n<p>Veamos los pasos para efectuar el alta en la tabla alumnos:</p>\n<pre>  \\$conexion = mysqli_connect(\"localhost\", \"root\", \"\", \"base1\") or\n    die(\"Problemas con la conexión\");\n</pre>\nLa función mysqli_connect se conecta a una base de datos de tipo MySql, el primer parámetro es la dirección donde se encuentra el gestor de base de datos (en este caso en el mismo servidor por lo que indicamos esto con \"localhost\"), el segundo parámetro es el nombre de usuario de la base de datos (\"root\" en nuestro caso, que es el usuario por defecto que crea MySql para el administrador), seguidamente indicamos la clave del usuario root (por defecto al instalar el XAMPP se crea con clave vacía) y por último indicamos el nombre de la base de datos a conectarnos (en nuestro ejemplo ya creamos la base de datos llamada: base1 que tiene la tabla alumnos)<p></p>\n<p>En caso de haber algún error en la llamada a la función la misma retorna false por lo que se ejecuta la instrucción seguida del operador or, en nuestro caso llamamos a la función die que detiene la ejecución del programa y muestra el mensaje por pantalla.</p>\n\n<p>El paso más importante es la codificación del comando SQL insert(debemos llamar a la función mysqli_query pasando como primer parámetro la referencia a la conexion y el segundo parámetro es un string con el comando insert):</p>\n<pre>  mysqli_query(\\$conexion, \"insert into alumnos(nombre,mail,codigocurso) values \n                       ('\\$_REQUEST[nombre]','\\$_REQUEST[mail]',\\$_REQUEST[codigocurso])\")\n    or die(\"Problemas en el select\" . mysqli_error(\\$conexion));\n</pre>\n<p>La sintaxis del comando insert es bastante sencilla, indicamos el nombre de la tabla y los campos de la tabla a cargar. Luego debemos indicar en el mismo orden los valores a cargar en cada campo (dichos valores los rescatamos del formulario anterior).</p>\n\n<p>Los campos de tipo varchar SQL requiere que encerremos entre comillas simples, esto sucede para el nombre y el mail; en cambio, para el codigocurso esto no debe ser así.</p>\n\n<p>Otra cosa a tener en cuenta es que los subíndices de los vectores asociativos no deben ir entre simples comillas ya que se encuentran dentro de un string, sino se producirá un error.</p>\n<p>En caso que MySql detecte un error, retorna false la función mysqli_query, por lo que se ejecuta la instrucción posterior al or, es decir la función die que mostrará el error generado por MySql llamando a la función mysqli_error.</p>\n\n<p>Por último cerramos la conexión con la base de datos y mostramos un mensaje indicando que la carga se efectuó en forma correcta.</p>\n<p>Tener en cuenta que el campo código se generó en forma automática.</p>\n\n<p>Si queremos controlar que el insert se efectuó en forma correcta podemos ingresar al PHPMyAdmin y seleccionar la tabla \"alumnos\", y en la pestaña \"examinar\" podremos ver los datos ingresados desde la página que creamos:</p>\n<img src=\"asset:assets/img/20_foto021.jpg\" border=\"0\" alt=\"PHPMyAdmin insert en una tabla\">\n<br>\n<br>\n\n<h2>Problema resuelto.</h2>\n<p>Copiar el contenido de este cuadro de texto al VS Code y almacenarlo en la carpeta c:/xampp/htdocs con un nombre con extensión php.<br>\n  luego abrir el navegador (Chrome, FireFox, IExplorer etc.) y en la barra de direcciones tipear:<br> http://localhost/pagina1.php (o el nombre del\narchivo que le dió)  </p>\n<pre class=\"programafuente\" name=\"programa\" rows=\"15\" cols=\"110\" wrap=\"off\" readonly=\"\">&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n  &lt;h1&gt;Alta de Alumnos&lt;/h1&gt;\n  &lt;form action=\"pagina2.php\" method=\"post\"&gt;\n    Ingrese nombre:\n    &lt;input type=\"text\" name=\"nombre\"&gt;&lt;br&gt;\n    Ingrese mail:\n    &lt;input type=\"text\" name=\"mail\"&gt;&lt;br&gt;\n    Seleccione el curso:\n    &lt;select name=\"codigocurso\"&gt;\n      &lt;option value=\"1\"&gt;PHP&lt;/option&gt;\n      &lt;option value=\"2\"&gt;ASP&lt;/option&gt;\n      &lt;option value=\"3\"&gt;JSP&lt;/option&gt;\n    &lt;/select&gt;\n    &lt;br&gt;\n    &lt;input type=\"submit\" value=\"Registrar\"&gt;\n  &lt;/form&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;</pre>\n<h3>Ejecutar ejemplo</h3> \n<pre class=\"programafuente\" name=\"programa2\" rows=\"15\" cols=\"110\" wrap=\"off\" readonly=\"\">&lt;html&gt;\n&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n  &lt;?php\n  \\$conexion = mysqli_connect(\"localhost\", \"root\", \"\", \"base1\") or\n    die(\"Problemas con la conexión\");\n\n  mysqli_query(\\$conexion, \"insert into alumnos(nombre,mail,codigocurso) values \n                       ('\\$_REQUEST[nombre]','\\$_REQUEST[mail]',\\$_REQUEST[codigocurso])\")\n    or die(\"Problemas en el select\" . mysqli_error(\\$conexion));\n\n  mysqli_close(\\$conexion);\n\n  echo \"El alumno fue dado de alta.\";\n  ?&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;</pre>\n<h2>Problema propuesto.</h2>\nCrear en la base de datos \"base1\" otra tabla llamada \"cursos\".<br>\nLa estructura de esta segunda tabla debe ser:<br>\n<pre>  codigo int auto_increment primery_key\n  nombrecurso varchar(40)\n</pre>\nUtilizar el PHPMyAdmin para la creación de esta tabla.<br>\nImplementar las dos páginas necesarias para efectuar el alta de cursos. Un formulario para ingresar el nombre del curso y otra página donde se efectuará el insert.<br>\n<h3>Solución</h3>\n<pre class=\"programafuente\" name=\"programa\" rows=\"15\" cols=\"110\" wrap=\"off\" readonly=\"\">&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n\n  &lt;form action=\"pagina2.php\" method=\"post\"&gt;\n    Ingrese nombre del curso:\n    &lt;input type=\"text\" name=\"nombrecurso\" size=\"40\"&gt;\n    &lt;br&gt;\n    &lt;input type=\"submit\" value=\"Confirmar\"&gt;\n  &lt;/form&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;</pre>\n<h3>Ejecutar ejemplo</h3> \n<pre class=\"programafuente\" name=\"programa2\" rows=\"15\" cols=\"110\" wrap=\"off\" readonly=\"\">&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n  &lt;?php\n  \\$conexion = mysqli_connect(\"localhost\", \"root\", \"\", \"base1\") or\n    die(\"Problemas con la conexión\");\n\n  mysqli_query(\\$conexion, \"insert into cursos(nombrecurso) values ('\\$_REQUEST[nombrecurso]')\") or\n    die(\"Problemas en el select\" . mysqli_error(\\$conexion));\n\n  mysqli_close(\\$conexion);\n\n  echo \"El curso fue dado de alta.\";\n  ?&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;</pre>\n</div>"
    },
    {
        "title": "21 - Listado (selección de registros de una tabla)",
        "subtitle": "Para recuperar datos desde MySQL o MariaDB debemos ...",
        "content": "<div>\n<p>Para recuperar datos desde MySQL o MariaDB debemos emplear el comando select:</p>\n<pre>  select codigo,nombre,mail,codigocurso from alumnos\n</pre>\n<p>Debemos pasar desde PHP un string con este comando para que MySQL lo ejecute y retorne todas las filas de la tabla alumnos.</p>\n<p>Veremos entonces como recuperar los datos almacenados en la tabla alumnos de la base de datos \"base1\".</p>\nEl programa que muestra los registros en una página es:<br>\n<pre class=\"recuadroborde\">&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n\n  &lt;?php\n  \\$conexion = mysqli_connect(\"localhost\", \"root\", \"\", \"base1\") or\n    die(\"Problemas con la conexión\");\n\n  \\$registros = mysqli_query(\\$conexion, \"select codigo,nombre,mail,codigocurso\n                        from alumnos\") or\n    die(\"Problemas en el select:\" . mysqli_error(\\$conexion));\n\n  while (\\$reg = mysqli_fetch_array(\\$registros)) {\n    echo \"Codigo:\" . \\$reg['codigo'] . \"&lt;br&gt;\";\n    echo \"Nombre:\" . \\$reg['nombre'] . \"&lt;br&gt;\";\n    echo \"Mail:\" . \\$reg['mail'] . \"&lt;br&gt;\";\n    echo \"Curso:\";\n    switch (\\$reg['codigocurso']) {\n      case 1:\n        echo \"PHP\";\n        break;\n      case 2:\n        echo \"ASP\";\n        break;\n      case 3:\n        echo \"JSP\";\n        break;\n    }\n    echo \"&lt;br&gt;\";\n    echo \"&lt;hr&gt;\";\n  }\n\n  mysqli_close(\\$conexion);\n  ?&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;\n</pre>\n\n<p>La primer parte es similar a lo visto hasta ahora, es decir nos conectamos con el servidor de base de datos y seleccionamos la base de datos base1:</p>\n<pre>  \\$conexion = mysqli_connect(\"localhost\", \"root\", \"\", \"base1\") or\n    die(\"Problemas con la conexión\");\n</pre>\n\n<p>El comando SQL que nos permite recuperar datos de tablas se llama SELECT. Indicamos los campos a rescatar de la tabla y luego de la palabra clave from indicamos el nombre de la tabla:</p>\n<pre>  \\$registros = mysqli_query(\\$conexion, \"select codigo,nombre,mail,codigocurso\n                        from alumnos\") or\n    die(\"Problemas en el select:\" . mysqli_error(\\$conexion));\n</pre>\n<p>En caso de haber codificado incorrectamente, el comando SQL select la función mysqli_query retorna false, por lo que se ejecuta el comando siguiente al operador or, es decir la función die.</p>\n<p>Si el comando SQL es correcto, en la variable \\$registros se almacena una referencia a los datos rescatados de la tabla alumnos. Ahora debemos ir mostrando registro a registro los datos extraídos:</p>\n<pre>  while (\\$reg = mysqli_fetch_array(\\$registros)) {\n</pre>\n<p>Para rescatar registro a registro los datos obtenidos por el select debemos llamar a la función mysqli_fetch_array. Esta función retorna un vector asociativo con los datos del registro rescatado, o false en caso de no haber más registros. Es decir que si retorna un registro se almacena en el vector \\$reg y la condición del while se valida como verdadero y pasa a ejecutarse el bloque del while:</p>\n<pre>    echo \"Codigo:\" . \\$reg['codigo'] . \"&lt;br&gt;\";\n    echo \"Nombre:\" . \\$reg['nombre'] . \"&lt;br&gt;\";\n    echo \"Mail:\" . \\$reg['mail'] . \"&lt;br&gt;\";\n    echo \"Curso:\";\n    switch (\\$reg['codigocurso']) {\n      case 1:\n        echo \"PHP\";\n        break;\n      case 2:\n        echo \"ASP\";\n        break;\n      case 3:\n        echo \"JSP\";\n        break;\n    }\n    echo \"&lt;br&gt;\";\n    echo \"&lt;hr&gt;\";\n  }\n</pre>\n<p>El bloque del while muestra el contenido del registro rescatado por la función mysqli_fetch_array. Como vemos, para rescatar cada campo accedemos mediante el vector asociativo \\$reg indicando como subíndice un campo contenido en el select:\\$reg['codigo']</p>\n<p>Cada vez que llamamos a la función mysqli_fetch_array nos retorna el siguiente registro.</p>\n<p>Cuando debemos mostrar el curso mediante la instrucción switch, analizamos si tiene un 1,2 ó 3 y procedemos a mostrar el nombre del curso.</p>\n<p>Para separar cada alumno en la página HTML disponemos el elemento \"&lt;hr&gt;\"</p>\n<h2>Problema resuelto.</h2>\n<p>Copiar el contenido de este cuadro de texto al VS Code y almacenarlo en la carpeta c:/xampp/htdocs con un nombre con extensión php.<br>\n  luego abrir el navegador (Chrome, FireFox, IExplorer etc.) y en la barra de direcciones tipear:<br> http://localhost/pagina1.php (o el nombre del\narchivo que le dió)  </p>\n<pre>&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n\n  &lt;?php\n  \\$conexion = mysqli_connect(\"localhost\", \"root\", \"\", \"base1\") or\n    die(\"Problemas con la conexión\");\n\n  \\$registros = mysqli_query(\\$conexion, \"select codigo,nombre, mail, codigocurso\n                        from alumnos\") or\n    die(\"Problemas en el select:\" . mysqli_error(\\$conexion));\n\n  while (\\$reg = mysqli_fetch_array(\\$registros)) {\n    echo \"Codigo:\" . \\$reg['codigo'] . \"&lt;br&gt;\";\n    echo \"Nombre:\" . \\$reg['nombre'] . \"&lt;br&gt;\";\n    echo \"Mail:\" . \\$reg['mail'] . \"&lt;br&gt;\";\n    echo \"Curso:\";\n    switch (\\$reg['codigocurso']) {\n      case 1:\n        echo \"PHP\";\n        break;\n      case 2:\n        echo \"ASP\";\n        break;\n      case 3:\n        echo \"JSP\";\n        break;\n    }\n    echo \"&lt;br&gt;\";\n    echo \"&lt;hr&gt;\";\n  }\n\n  mysqli_close(\\$conexion);\n  ?&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;</pre>\n<p>Ejecutar ejemplo</p> \n<h2>Problema propuesto.</h2>\nConfeccionar un programa que recupere los datos de la tabla cursos de la base de datos base1. Mostrar el código de curso y su nombre.<br>\n<h3>Solución</h3>\n<pre>&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n\n  &lt;?php\n  \\$conexion = mysqli_connect(\"localhost\", \"root\", \"\", \"base1\") or\n    die(\"Problemas con la conexión\");\n\n  \\$registros = mysqli_query(\\$conexion, \"select codigo,nombrecurso from cursos\") or\n    die(\"Problemas en el select:\" . mysqli_error(\\$conexion));\n\n  while (\\$reg = mysqli_fetch_array(\\$registros)) {\n    echo \"Codigo:\" . \\$reg['codigo'] . \"&lt;br&gt;\";\n    echo \"Nombre del curso:\" . \\$reg['nombrecurso'] . \"&lt;br&gt;\";\n    echo \"&lt;hr&gt;\";\n  }\n\n  mysqli_close(\\$conexion);\n  ?&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;</pre>\n</div>"
    },
    {
        "title": "22 - Consulta (selección de registros de una tabla)",
        "subtitle": "El proceso de consulta de datos de una tabla es similar al de listado ...",
        "content": "<div>\n<p>El proceso de consulta de datos de una tabla es similar al de listado, la diferencia es que se muestra sólo aquel o aquellos que cumplen la condición por la que buscamos.</p>\n<p>Haremos un programa que nos permita consultar los datos de un alumno ingresando su mail para su búsqueda. Tengamos en cuenta que no puede haber dos alumnos con el mismo mail, por lo que la consulta nos puede arrojar uno o ningún registro.</p>\n<p>Debemos codificar un formulario para el ingreso del mail a consultar:</p>\n<pre class=\"recuadroborde\">&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n  &lt;form action=\"pagina2.php\" method=\"post\"&gt;\n    Ingrese el mail del alumno a consultar:\n    &lt;input type=\"text\" name=\"mail\"&gt;\n    &lt;br&gt;\n    &lt;input type=\"submit\" value=\"buscar\"&gt;\n  &lt;/form&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;\n</pre>\n<p>Por otro lado tenemos el archivo \"pagina2.php\" que se encarga de buscar el mail ingresado en el formulario:</p>\n<pre class=\"recuadroborde\">&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n  &lt;?php\n  \\$conexion = mysqli_connect(\"localhost\", \"root\", \"\", \"base1\") or\n    die(\"Problemas con la conexión\");\n\n  \\$registros = mysqli_query(\\$conexion, \"select codigo,nombre,codigocurso\n                        from alumnos where mail='\\$_REQUEST[mail]'\") or\n    die(\"Problemas en el select:\" . mysqli_error(\\$conexion));\n\n  if (\\$reg = mysqli_fetch_array(\\$registros)) {\n    echo \"Nombre:\" . \\$reg['nombre'] . \"&lt;br&gt;\";\n    echo \"Curso:\";\n    switch (\\$reg['codigocurso']) {\n      case 1:\n        echo \"PHP\";\n        break;\n      case 2:\n        echo \"ASP\";\n        break;\n      case 3:\n        echo \"JSP\";\n        break;\n    }\n  } else {\n    echo \"No existe un alumno con ese mail.\";\n  }\n  mysqli_close(\\$conexion);\n  ?&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;\n</pre>\n<p>Lo más importante se encuentra en el comando select:</p>\n<pre>  \\$registros = mysqli_query(\\$conexion, \"select codigo,nombre,codigocurso\n                        from alumnos where mail='\\$_REQUEST[mail]'\") or\n    die(\"Problemas en el select:\" . mysqli_error(\\$conexion));\n</pre>\n<p>Acá es donde con la clausula where seleccionamos sólo el registro que cumple con la condición que el mail sea igual al que ingresamos.</p>\n<p>Como sólo puede haber un registro que cumpla la condición, llamamos a la función mysqli_fetch_array en un if y no una estructura repetitiva como el listado:</p>\n<pre>  if (\\$reg = mysqli_fetch_array(\\$registros)) {\n</pre>\n<p>En caso de retornar un vector asociativo la condición del if se verifica como verdadera y pasa a mostrar los datos, en caso de retornar false se ejecuta el else.</p>\n<h2>Problema resuelto.</h2>\n<p>Copiar el contenido de este cuadro de texto al VS Code y almacenarlo en la carpeta c:/xampp/htdocs con un nombre con extensión php.<br>\n  luego abrir el navegador (Chrome, FireFox, IExplorer etc.) y en la barra de direcciones tipear:<br> http://localhost/pagina1.php (o el nombre del\narchivo que le dió)  </p>\n<pre class=\"programafuente\" name=\"programa\" rows=\"15\" cols=\"110\" wrap=\"off\" readonly=\"\">&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n  &lt;form action=\"pagina2.php\" method=\"post\"&gt;\n    Ingrese el mail del alumno a consultar:\n    &lt;input type=\"text\" name=\"mail\"&gt;\n    &lt;br&gt;\n    &lt;input type=\"submit\" value=\"buscar\"&gt;\n  &lt;/form&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;</pre>\n<p>Ejecutar ejemplo</p> \n<pre>&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n  &lt;?php\n  \\$conexion = mysqli_connect(\"localhost\", \"root\", \"\", \"base1\") or\n    die(\"Problemas con la conexión\");\n\n  \\$registros = mysqli_query(\\$conexion, \"select codigo,nombre,codigocurso\n                        from alumnos where mail='\\$_REQUEST[mail]'\") or\n    die(\"Problemas en el select:\" . mysqli_error(\\$conexion));\n\n  if (\\$reg = mysqli_fetch_array(\\$registros)) {\n    echo \"Nombre:\" . \\$reg['nombre'] . \"&lt;br&gt;\";\n    echo \"Curso:\";\n    switch (\\$reg['codigocurso']) {\n      case 1:\n        echo \"PHP\";\n        break;\n      case 2:\n        echo \"ASP\";\n        break;\n      case 3:\n        echo \"JSP\";\n        break;\n    }\n  } else {\n    echo \"No existe un alumno con ese mail.\";\n  }\n  mysqli_close(\\$conexion);\n  ?&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;</pre>\n<h2>Problema propuesto.</h2>\n<p>Confeccionar un programa que permita ingresar el nombre de un alumno en un formulario, luego mostrar los datos del mismo (tener en cuenta que puede haber más de un alumno con el mismo nombre)</p><form name=\"formulario\" action=\"\" target=\"ventanaForm\" onsubmit=\"abrirVentana()\" method=\"post\">\n<p>Solución</p>\n<pre class=\"programafuente\" name=\"programa\" rows=\"15\" cols=\"110\" wrap=\"off\" readonly=\"\">&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n  &lt;form action=\"pagina2.php\" method=\"post\"&gt;\n    Ingrese nombre del/los alumno/s:\n    &lt;input type=\"text\" name=\"nombre\"&gt;\n    &lt;br&gt;\n    &lt;input type=\"submit\" value=\"buscar\"&gt;\n  &lt;/form&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;</pre>\n<p>Ejecutar ejemplo</p> \n<pre class=\"programafuente\" name=\"programa2\" rows=\"15\" cols=\"110\" wrap=\"off\" readonly=\"\">&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n  &lt;?php\n  \\$conexion = mysqli_connect(\"localhost\", \"root\", \"\", \"base1\") or\n    die(\"Problemas con la conexión\");\n\n  \\$registros = mysqli_query(\\$conexion, \"select codigo,nombre, codigocurso\n                        from alumnos where nombre='\\$_REQUEST[nombre]'\") or\n    die(\"Problemas en el select:\" . mysqli_error(\\$conexion));\n\n  \\$cant = 0;\n  while (\\$reg = mysqli_fetch_array(\\$registros)) {\n    echo \"Nombre:\" . \\$reg['nombre'] . \"&lt;br&gt;\";\n    echo \"Curso:\";\n    switch (\\$reg['codigocurso']) {\n      case 1:\n        echo \"PHP\";\n        break;\n      case 2:\n        echo \"ASP\";\n        break;\n      case 3:\n        echo \"JSP\";\n        break;\n    }\n    \\$cant++;\n    echo \"&lt;hr&gt;\";\n  }\n\n  if (\\$cant == 0) {\n    echo \"No existen alumnos con dicho nombre\";\n  }\n\n  mysqli_close(\\$conexion);\n  ?&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;</pre>\n</div>"
    },
    {
        "title": "23 - DELETE (Baja de un registro en una tabla)",
        "subtitle": "El objetivo de este punto es el borrado de un registro de una tabla ...",
        "content": "<div>\n<h2>23 - DELETE (Baja de un registro en una tabla)</h2>\n<p>El objetivo de este punto es el borrado de un registro de una tabla. Para ello, implementaremos un algoritmo que solicite ingresar el mail de un alumno y posteriormente efectúe su borrado.</p>\n<p>Para eliminar filas en una tabla debemos utilizar el comando SQL delete.</p>\n<p>La primera página es idéntica a la consulta, ya que debemos implementar un formulario que solicite la carga del mail del alumno:</p>\n<pre class=\"recuadroborde\">&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n  &lt;form action=\"pagina2.php\" method=\"post\"&gt;\n    Ingrese el mail del alumno a borrar:\n    &lt;input type=\"text\" name=\"mail\"&gt;\n    &lt;br&gt;\n    &lt;input type=\"submit\" value=\"buscar y borrar\"&gt;\n  &lt;/form&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;\n</pre>\n<p>Por otro lado tenemos el archivo \"pagina2.php\" que se encarga de buscar el mail ingresado en el formulario y en caso que exista se procede a borrarlo:</p>\n<pre class=\"recuadroborde\">&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n  &lt;?php\n  \\$conexion = mysqli_connect(\"localhost\", \"root\", \"\", \"base1\") or\n    die(\"Problemas con la conexión\");\n\n  \\$registros = mysqli_query(\\$conexion, \"select codigo from alumnos\n                        where mail='\\$_REQUEST[mail]'\") or\n    die(\"Problemas en el select:\" . mysqli_error(\\$conexion));\n  if (\\$reg = mysqli_fetch_array(\\$registros)) {\n    mysqli_query(\\$conexion, \"delete from alumnos where mail='\\$_REQUEST[mail]'\") or\n      die(\"Problemas en el select:\" . mysqli_error(\\$conexion));\n    echo \"Se efectuó el borrado del alumno con dicho mail.\";\n  } else {\n    echo \"No existe un alumno con ese mail.\";\n  }\n  mysqli_close(\\$conexion);\n  ?&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;\n</pre>\n\n<p>En esta segunda página efectuamos dos llamadas a la función mysqli_query, una para consultar si existe el mail ingresado y otra para efectuar el borrado del registro respectivo. Si no existe el mail ingresado mostramos un mensaje de tal situación.</p>\n<h2>Problema resuelto.</h2>\n<p>Copiar el contenido de este cuadro de texto al VS Code y almacenarlo en la carpeta c:/xampp/htdocs con un nombre con extensión php.<br>\n  luego abrir el navegador (Chrome, FireFox, IExplorer etc.) y en la barra de direcciones tipear:<br> http://localhost/pagina1.php (o el nombre del\narchivo que le dió)  </p>\n<pre class=\"programafuente\" name=\"programa\" rows=\"15\" cols=\"110\" wrap=\"off\" readonly=\"\">&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n  &lt;form action=\"pagina2.php\" method=\"post\"&gt;\n    Ingrese el mail del alumno a borrar:\n    &lt;input type=\"text\" name=\"mail\"&gt;\n    &lt;br&gt;\n    &lt;input type=\"submit\" value=\"buscar y borrar\"&gt;\n  &lt;/form&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;</pre>\n<p>Ejecutar ejemplo</p> \n<pre class=\"programafuente\" name=\"programa2\" rows=\"15\" cols=\"110\" wrap=\"off\" readonly=\"\">&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n  &lt;?php\n  \\$conexion = mysqli_connect(\"localhost\", \"root\", \"\", \"base1\") or\n    die(\"Problemas con la conexión\");\n\n  \\$registros = mysqli_query(\\$conexion, \"select codigo from alumnos\n                        where mail='\\$_REQUEST[mail]'\") or\n    die(\"Problemas en el select:\" . mysqli_error(\\$conexion));\n  if (\\$reg = mysqli_fetch_array(\\$registros)) {\n    mysqli_query(\\$conexion, \"delete from alumnos where mail='\\$_REQUEST[mail]'\") or\n      die(\"Problemas en el select:\" . mysqli_error(\\$conexion));\n    echo \"Se efectuó el borrado del alumno con dicho mail.\";\n  } else {\n    echo \"No existe un alumno con ese mail.\";\n  }\n  mysqli_close(\\$conexion);\n  ?&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;</pre>\n<h2>Problema propuesto.</h2>\n<p>Confeccionar un programa que permita ingresar el nombre de un curso por teclado y posteriormente efectúe el borrado de dicho registro en la tabla cursos. Mostrar un mensaje si no existe el curso.</p><form name=\"formulario\" action=\"\" target=\"ventanaForm\" onsubmit=\"abrirVentana()\" method=\"post\">\n<p>Solución</p>\n<pre class=\"programafuente\" name=\"programa\" rows=\"15\" cols=\"110\" wrap=\"off\" readonly=\"\">&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n  &lt;form action=\"pagina2.php\" method=\"post\"&gt;\n    Ingrese nombre del curso a borrar:\n    &lt;input type=\"text\" name=\"nombrecurso\"&gt;\n    &lt;br&gt;\n    &lt;input type=\"submit\" value=\"Borrar\"&gt;\n  &lt;/form&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;</pre>\n<p>Ejecutar ejemplo</p> \n<pre class=\"programafuente\" name=\"programa2\" rows=\"15\" cols=\"110\" wrap=\"off\" readonly=\"\">&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n  &lt;?php\n  \\$conexion = mysqli_connect(\"localhost\", \"root\", \"\", \"base1\") or\n    die(\"Problemas con la conexión\");\n\n  \\$registros = mysqli_query(\\$conexion, \"select codigo from cursos\n                        where nombrecurso='\\$_REQUEST[nombrecurso]'\") or\n    die(\"Problemas en el select:\" . mysqli_error(\\$conexion));\n  if (\\$reg = mysqli_fetch_array(\\$registros)) {\n    mysqli_query(\\$conexion, \"delete from cursos where nombrecurso='\\$_REQUEST[nombrecurso]'\") or\n      die(\"Problemas en el select:\" . mysqli_error(\\$conexion));\n    echo \"Se efectuó el borrado del curso ingresado.\";\n  } else {\n    echo \"No existe un curso con dicho nombre.\";\n  }\n  mysqli_close(\\$conexion);\n  ?&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;</pre>\n</div>"
    },
    {
        "title": "24 - DELETE (Baja de todos los registros de una tabla)",
        "subtitle": "Vimos en el concepto anterior que podemos borrar una ...",
        "content": "<div>\n<h2>24 - DELETE (Baja de todos los registros de una tabla)</h2>\n<p>Vimos en el concepto anterior que podemos borrar una o más filas de una tabla indicando en el where del comando SQL delete la condición que debe cumplir la fila para ser borrada.</p>\n<p>Para borrar todos los registros de una tabla debemos llamar al comando delete de SQL sin disponer la cláusula where.</p>\n<p>Es importante tener en cuenta que la ausencia de la cláusula where en el comando delete eliminará todas las filas de la tabla.</p>\n<pre class=\"recuadroborde\">&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n  &lt;?php\n  \\$conexion = mysqli_connect(\"localhost\", \"root\", \"\", \"base1\") or\n    die(\"Problemas con la conexión\");\n\n  mysqli_query(\\$conexion, \"delete from alumnos\") or\n    die(\"Problemas en el select:\" . mysqli_error(\\$conexion));\n\n  echo \"Se efectuó el borrado de todos los alumnos.\";\n\n  mysqli_close(\\$conexion);\n  ?&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;\n</pre>\n<h2>Problema resuelto.</h2>\n<p>Copiar el contenido de este cuadro de texto al VS Code y almacenarlo en la carpeta c:/xampp/htdocs con un nombre con extensión php.<br>\n  luego abrir el navegador (Chrome, FireFox, IExplorer etc.) y en la barra de direcciones tipear:<br> http://localhost/pagina1.php (o el nombre del\narchivo que le dió)  </p>\n<pre class=\"programafuente\" name=\"programa\" rows=\"15\" cols=\"110\" wrap=\"off\" readonly=\"\">&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n  &lt;?php\n  \\$conexion = mysqli_connect(\"localhost\", \"root\", \"\", \"base1\") or\n    die(\"Problemas con la conexión\");\n\n  mysqli_query(\\$conexion, \"delete from alumnos\") or\n    die(\"Problemas en el select:\" . mysqli_error(\\$conexion));\n\n  echo \"Se efectuó el borrado de todos los alumnos.\";\n\n  mysqli_close(\\$conexion);\n  ?&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;</pre>\n<p>Ejecutar ejemplo</p> \n<h2>Problema propuesto.</h2>\n<p>Efectuar el borrado de todos los registros de la tabla cursos.</p><form name=\"formulario\" action=\"\" target=\"ventanaForm\" onsubmit=\"abrirVentana()\" method=\"post\">\n<p>Solución</p>\n<pre class=\"programafuente\" name=\"programa\" rows=\"15\" cols=\"110\" wrap=\"off\" readonly=\"\">&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n  &lt;?php\n  \\$conexion = mysqli_connect(\"localhost\", \"root\", \"\", \"base1\") or\n    die(\"Problemas con la conexión\");\n\n  mysqli_query(\\$conexion, \"delete from cursos\") or\n    die(\"Problemas en el select:\" . mysqli_error(\\$conexion));\n  echo \"Se efectuó el borrado de todos los cursos.\";\n  mysqli_close(\\$conexion);\n  ?&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;</pre>\n</div>"
    },
    {
        "title": "25 - UPDATE (Modificación de un registro de una tabla)",
        "subtitle": "De las actividades con una tabla esta es la más larga ...",
        "content": "<div>\n<h2>25 - UPDATE (Modificación de un registro de una tabla)</h2>\n<p>De las actividades con una tabla esta es la más larga. Vamos a resolverlo implementando tres páginas, la primera un formulario de consulta del mail de un alumno, la segunda otro formulario que nos permita cargar su mail modificado y la última registrará el cambio en la tabla.</p>\n<p>El formulario de consulta del mail del alumno es similar a problemas anteriores:</p>\n<pre class=\"recuadroborde\">&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n  &lt;form action=\"pagina2.php\" method=\"post\"&gt;\n    Ingrese el mail del alumno:\n    &lt;input type=\"text\" name=\"mail\"&gt;&lt;br&gt;\n    &lt;input type=\"submit\" value=\"buscar\"&gt;\n  &lt;/form&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;\n</pre>\n<p>La segunda página es la más interesante y con conceptos nuevos:</p>\n<pre class=\"recuadroborde\">&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n\n  &lt;?php\n\n  \\$conexion = mysqli_connect(\"localhost\", \"root\", \"\", \"base1\") or\n    die(\"Problemas con la conexión\");\n\n  \\$registros = mysqli_query(\\$conexion, \"select * from alumnos\n                        where mail='\\$_REQUEST[mail]'\") or\n    die(\"Problemas en el select:\" . mysqli_error(\\$conexion));\n  if (\\$reg = mysqli_fetch_array(\\$registros)) {\n    ?&gt;\n\n    &lt;form action=\"pagina3.php\" method=\"post\"&gt;\n      Ingrese nuevo mail:\n      &lt;input type=\"text\" name=\"mailnuevo\" value=\"&lt;?php echo \\$reg['mail'] ?&gt;\"&gt;\n      &lt;br&gt;\n      &lt;input type=\"hidden\" name=\"mailviejo\" value=\"&lt;?php echo \\$reg['mail'] ?&gt;\"&gt;\n      &lt;input type=\"submit\" value=\"Modificar\"&gt;\n    &lt;/form&gt;\n\n  &lt;?php\n  } else\n    echo \"No existe alumno con dicho mail\";\n  ?&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;\n</pre>\n<p>Lo primero que podemos observar es que si el if se verifica verdadero se ejecuta un bloque que contiene código HTML:</p>\n<pre>  if (\\$reg = mysqli_fetch_array(\\$registros)) {\n    ?&gt;\n\n    &lt;form action=\"pagina3.php\" method=\"post\"&gt;\n      Ingrese nuevo mail:\n      &lt;input type=\"text\" name=\"mailnuevo\" value=\"&lt;?php echo \\$reg['mail'] ?&gt;\"&gt;\n      &lt;br&gt;\n      &lt;input type=\"hidden\" name=\"mailviejo\" value=\"&lt;?php echo \\$reg['mail'] ?&gt;\"&gt;\n      &lt;input type=\"submit\" value=\"Modificar\"&gt;\n    &lt;/form&gt;\n\n  &lt;?php\n</pre>\n<p>Es decir que podemos disponer bloques de PHP dispersos dentro de la página.</p>\n<p>Otro concepto importante es como enviar el mail del primer formulario a la tercer página, esto se logra con los controles de tipo \"hidden\", este tipo de control no se visualiza en el formulario pero se envía al presionar el botón submit.</p>\n<p>Si queremos que el control text se cargue con el mail ingresado en el formulario anterior debemos cargar la propiedad value con dicho valor:</p>\n<pre>      &lt;input type=\"hidden\" name=\"mailviejo\" value=\"&lt;?php echo \\$reg['mail'] ?&gt;\"&gt;\n</pre>\n<p>Por último la pagina3.php es la que efectúa la modificación de la tabla propiamente dicha. Con el mail ingresado en la pagina1.php, el mail modificado en la pagina2.php se efectúa el update.</p>\n<pre class=\"recuadro\">&lt;html&gt;\n\n&lt;head&gt;\n    &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n    &lt;?php\n    \\$conexion = mysqli_connect(\"localhost\", \"root\", \"\", \"base1\") or\n        die(\"Problemas con la conexión\");\n\n    mysqli_query(\\$conexion, \"update alumnos\n                          set mail='\\$_REQUEST[mailnuevo]' \n                        where mail='\\$_REQUEST[mailviejo]'\") or\n        die(\"Problemas en el select:\" . mysqli_error(\\$conexion));\n    echo \"El mail fue modificado con exito\";\n    ?&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;\n</pre>\n<p>Tengamos en cuenta que el segundo formulario nos envía dos datos: \\$_REQUEST[mailnuevo] y \\$_REQUEST[mailviejo].</p>\n<p>Si no llamamos a:</p>\n<pre>  mysqli_close(\\$conexion);\n</pre>\n<p>Cuando finaliza la ejecución del script de PHP se libera automáticamenta la conexión con MySQL.</p> \n<h2>Problema resuelto.</h2>\n<p>Copiar el contenido de este cuadro de texto al VS Code y almacenarlo en la carpeta c:/xampp/htdocs con un nombre con extensión php.<br>\n  luego abrir el navegador (Chrome, FireFox, IExplorer etc.) y en la barra de direcciones tipear:<br> http://localhost/pagina1.php (o el nombre del\narchivo que le dió)  </p>\n<pre class=\"programafuente\" name=\"programa\" rows=\"15\" cols=\"110\" wrap=\"off\" readonly=\"\">&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n  &lt;form action=\"pagina2.php\" method=\"post\"&gt;\n    Ingrese el mail del alumno:\n    &lt;input type=\"text\" name=\"mail\"&gt;&lt;br&gt;\n    &lt;input type=\"submit\" value=\"buscar\"&gt;\n  &lt;/form&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;</pre>\n<p>Ejecutar ejemplo</p> \n<pre class=\"programafuente\" name=\"programa2\" rows=\"15\" cols=\"110\" wrap=\"off\" readonly=\"\">&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n\n  &lt;?php\n\n  \\$conexion = mysqli_connect(\"localhost\", \"root\", \"\", \"base1\") or\n    die(\"Problemas con la conexión\");\n\n  \\$registros = mysqli_query(\\$conexion, \"select * from alumnos\n                        where mail='\\$_REQUEST[mail]'\") or\n    die(\"Problemas en el select:\" . mysqli_error(\\$conexion));\n  if (\\$reg = mysqli_fetch_array(\\$registros)) {\n    ?&gt;\n\n    &lt;form action=\"pagina3.php\" method=\"post\"&gt;\n      Ingrese nuevo mail:\n      &lt;input type=\"text\" name=\"mailnuevo\" value=\"&lt;?php echo \\$reg['mail'] ?&gt;\"&gt;\n      &lt;br&gt;\n      &lt;input type=\"hidden\" name=\"mailviejo\" value=\"&lt;?php echo \\$reg['mail'] ?&gt;\"&gt;\n      &lt;input type=\"submit\" value=\"Modificar\"&gt;\n    &lt;/form&gt;\n\n  &lt;?php\n  } else\n    echo \"No existe alumno con dicho mail\";\n  ?&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;</pre>\n<br>\n<pre class=\"programafuente\" name=\"programa3\" rows=\"15\" cols=\"110\" wrap=\"off\" readonly=\"\">&lt;html&gt;\n\n&lt;head&gt;\n    &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n    &lt;?php\n    \\$conexion = mysqli_connect(\"localhost\", \"root\", \"\", \"base1\") or\n        die(\"Problemas con la conexión\");\n\n    mysqli_query(\\$conexion, \"update alumnos\n                          set mail='\\$_REQUEST[mailnuevo]' \n                        where mail='\\$_REQUEST[mailviejo]'\") or\n        die(\"Problemas en el select:\" . mysqli_error(\\$conexion));\n    echo \"El mail fue modificado con exito\";\n    ?&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;</pre>\n<h2>Problema propuesto.</h2>\n<p>Efectuar la modificación del nombre del curso de la tabla \"cursos\". Para la búsqueda ingresar el código de curso.</p><form name=\"formulario\" action=\"\" target=\"ventanaForm\" onsubmit=\"abrirVentana()\" method=\"post\">\n<p>Solución</p>\n<pre class=\"programafuente\" name=\"programa\" rows=\"15\" cols=\"110\" wrap=\"off\" readonly=\"\">&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n  &lt;form action=\"pagina2.php\" method=\"post\"&gt;\n    Ingrese el codigo del curso a modificar:\n    &lt;input type=\"text\" name=\"codigo\"&gt;&lt;br&gt;\n    &lt;input type=\"submit\" value=\"buscar\"&gt;\n  &lt;/form&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;</pre>\n<p>Ejecutar ejemplo</p> \n<pre class=\"programafuente\" name=\"programa2\" rows=\"15\" cols=\"110\" wrap=\"off\" readonly=\"\">&lt;html&gt;\n\n&lt;head&gt;\n  &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n\n  &lt;?php\n  \\$conexion = mysqli_connect(\"localhost\", \"root\", \"\", \"base1\") or\n    die(\"Problemas con la conexión\");\n\n  \\$registros = mysqli_query(\\$conexion, \"select * from cursos\n                        where codigo=\\$_REQUEST[codigo]\") or\n    die(\"Problemas en el select:\" . mysqli_error(\\$conexion));\n  if (\\$reg = mysqli_fetch_array(\\$registros)) {\n    ?&gt;\n\n    &lt;form action=\"pagina3.php\" method=\"post\"&gt;\n      Ingrese el nuevo nombre del curso:\n      &lt;input type=\"text\" name=\"nombrecurso\" value=\"&lt;?php echo \\$reg['nombrecurso'] ?&gt;\"&gt;\n      &lt;input type=\"hidden\" name=\"codigo\" value=\"&lt;?php echo \\$reg['codigo'] ?&gt;\"&gt;\n      &lt;br&gt;\n      &lt;input type=\"submit\" value=\"Modificar\"&gt;\n    &lt;/form&gt;\n\n  &lt;?php\n  } else\n    echo \"No existe un curso con dicho codigo\";\n  ?&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;</pre>\n<br>\n<pre class=\"programafuente\" name=\"programa3\" rows=\"15\" cols=\"110\" wrap=\"off\" readonly=\"\">&lt;html&gt;\n\n&lt;head&gt;\n    &lt;title&gt;Problema&lt;/title&gt;\n&lt;/head&gt;\n\n&lt;body&gt;\n    &lt;?php\n    \\$conexion = mysqli_connect(\"localhost\", \"root\", \"\", \"base1\") or\n        die(\"Problemas con la conexión\");\n\n    mysqli_query(\\$conexion, \"update cursos\n                          set nombrecurso='\\$_REQUEST[nombrecurso]' \n                        where codigo=\\$_REQUEST[codigo]\") or\n        die(\"Problemas en el select:\" . mysqli_error(\\$conexion));\n    echo \"Se modificó el nombre del curso\";\n    ?&gt;\n&lt;/body&gt;\n\n&lt;/html&gt;</pre>\n</div>"
    },
    {
        "title": "26 - INSERT (y consulta de otra tabla)",
        "subtitle": "En un primer paso vimos como efectuar el alta en la tabla alumnos ...",
        "content": "content"
    },
    {
        "title": "27 - Listado (selección de registros de varias tablas - INNER JOIN)",
        "subtitle": "Ahora veremos como imprimir todos los alumnos inscriptos a los cursos ...",
        "content": "content"
    },
    {
        "title": "28 - Función count de SQL",
        "subtitle": "Hay en MySQL funciones que nos permiten contar registros ...",
        "content": "content"
    },
    {
        "title": "29 - UPDATE (Modificación de un registro trabajando con dos tablas)",
        "subtitle": "Ahora complicaremos un poco la modificación de un registro ...",
        "content": "content"
    },
    {
        "title": "30 - Cláusula Group By de SQL",
        "subtitle": "Entre las muchas posibilidades que nos brinda SQL ...",
        "content": "content"
    },
    {
        "title": "31 - Parámetros en un hipervínculo",
        "subtitle": "Hasta ahora hemos visto como enviar datos de una página ...",
        "content": "content"
    },
    {
        "title": "32 - Paginación de registros",
        "subtitle": "En situaciones en las cuales una consulta retorna ...",
        "content": "content"
    },
    {
        "title": "33 - Subir un archivo al servidor (Upload)",
        "subtitle": "Una actividad común en un sitio es poder almacenar ...",
        "content": "content"
    },
    {
        "title": "34 - Creación y lectura de una cookie",
        "subtitle": "El protocolo HTTP es desconectado. Esto significa",
        "content": "content"
    },
    {
        "title": "35 - Borrado de una cookie",
        "subtitle": "Para borrar una cookie se debe llamar a la función setcookie",
        "content": "content"
    },
    {
        "title": "36 - Cookie de sesión",
        "subtitle": "Para crear una cookie que sólo tenga existencia mientras",
        "content": "content"
    },
    {
        "title": "37 - Variables de sesión ($_SESSION)",
        "subtitle": "Es otro método para hacer que variables estén disponibles",
        "content": "content"
    },
    {
        "title": "38 - Incluir un archivo externo (require_once)",
        "subtitle": "Hasta ahora hemos visto que un archivo contiene todo el código",
        "content": "content"
    },
    {
        "title": "39 - Redireccionar a otra página (header)",
        "subtitle": "Con PHP se puede implementar un pequeño programa",
        "content": "content"
    },
    {
        "title": "40 - Creación de imágenes dinámicas desde PHP",
        "subtitle": "Existe un conjunto de funciones que nos permite la creación",
        "content": "content"
    },
    {
        "title": "41 - Agregar imágenes dinámicas en un archivo HTML",
        "subtitle": "En un concepto anterior habíamos visto como crear un archivo gráfico",
        "content": "content"
    },
    {
        "title": "42 - Administración de fechas y horas (función date)",
        "subtitle": "La función date retorna un string con una fecha y hora",
        "content": "content"
    },
    {
        "title": "43 - Validación de una fecha ingresada por teclado (checkdate)",
        "subtitle": "Si disponemos en forma separada del día, mes y año hay",
        "content": "content"
    },
    {
        "title": "44 - Carga de una fecha en una tabla de MySQL",
        "subtitle": "Agregar a la tabla alumnos un campo llamado \"fechanac\"",
        "content": "content"
    },
    {
        "title": "45 - Formateo de datos en una página (printf)",
        "subtitle": "Hasta ahora siempre hemos impreso dentro de la página",
        "content": "content"
    },
    {
        "title": "46 - Formateo de datos y salida a un string (sprintf)",
        "subtitle": "Así como vimos que la función printf nos permite tener",
        "content": "content"
    },
    {
        "title": "47 - mysqli - POO (Programación Orientada a Objetos)",
        "subtitle": "En conceptos anteriores vimos un conjunto de funciones para el acceso",
        "content": "content"
    },
    {
        "title": "48 - mysqli (POO) - alta tabla rubros",
        "subtitle": "Implementaremos el alta de la tabla rubros utilizando la interfaz",
        "content": "content"
    },
    {
        "title": "49 - mysqli (POO) - listado tabla rubros",
        "subtitle": "Para recuperar datos de tablas disponemos de una clase",
        "content": "content"
    },
    {
        "title": "50 - mysqli (POO) - consulta tabla rubros",
        "subtitle": "Para consultar registros de una tabla debemos utilizar",
        "content": "content"
    },
    {
        "title": "51 - mysqli (POO) - borrado de un registro de la tabla rubros",
        "subtitle": "Para el borrado debemos primero localizar el registro a borrar",
        "content": "content"
    },
    {
        "title": "52 - mysqli (POO) - modificación de un registro de la tabla rubros",
        "subtitle": "Procederemos ahora a implementar el algoritmo para modificar",
        "content": "content"
    },
    {
        "title": "53 - mysqli (POO) - alta tabla articulos",
        "subtitle": "Ahora tenemos que implementar el alta en la tabla articulos",
        "content": "content"
    },
    {
        "title": "54 - mysqli (POO) - listado tabla articulos",
        "subtitle": "Ahora implementaremos el listado completo de la tabla",
        "content": "content"
    },
    {
        "title": "55 - mysqli (POO) - consulta tabla articulos",
        "subtitle": "Implementaremos el algoritmo para recuperar los datos",
        "content": "content"
    },
    {
        "title": "56 - mysqli (POO) - borrado de un registro de la tabla articulos",
        "subtitle": "Para borrar un artículo debemos implementar un formulario",
        "content": "content"
    },
    {
        "title": "57 - mysqli (POO) - modificación de un registro de la tabla articulos",
        "subtitle": "Para modificar los datos de un artículo implementaremos",
        "content": "content"
    },
    {
        "title": "58 - mysqli (POO) - panel para ABM de la tabla articulos",
        "subtitle": "Ahora implementaremos una serie de páginas para administrar",
        "content": "content"
    },
    {
        "title": "59 - mysqli (POO) - propiedad: affected_rows",
        "subtitle": "La propiedad affected_rows almacena la cantidad de filas",
        "content": "content"
    },
    {
        "title": "60 - mysqli (POO) - propiedad: insert_id",
        "subtitle": "Otra propiedad de amplio uso es insert_id, la misma",
        "content": "content"
    }
]